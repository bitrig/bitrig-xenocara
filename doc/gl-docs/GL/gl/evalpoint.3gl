'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 evalpoint
.ds Xs 57169 5 evalpoint.gl
.TH GLEVALPOINT 3G
.SH NAME
.B "glEvalPoint1, glEvalPoint2
\- generate and evaluate a single point in a mesh

.SH C SPECIFICATION
void \f3glEvalPoint1\fP(
GLint \fIi\fP )
.nf
.fi
void \f3glEvalPoint2\fP(
GLint \fIi\fP,
.nf
.ta \w'\f3void \fPglEvalPoint2( 'u
	GLint \fIj\fP )
.fi

.EQ
delim $$
.EN
.SH PARAMETERS
.TP \w'\f2i\fP\ \ 'u 
\f2i\fP
Specifies the integer value for grid domain variable $i$.
.TP
\f2j\fP
Specifies the integer value for grid domain variable $j$
(\%\f3glEvalPoint2\fP only).
.SH DESCRIPTION
\%\f3glMapGrid\fP and \%\f3glEvalMesh\fP are used in tandem to efficiently
generate and evaluate a series of evenly spaced map domain values.
\%\f3glEvalPoint\fP can be used to evaluate a single grid point in the same gridspace
that is traversed by \%\f3glEvalMesh\fP.
Calling \%\f3glEvalPoint1\fP is equivalent to calling
.nf
.IP
\f7
glEvalCoord1( i$^cdot^DELTA u ~+~ u sub 1$ );
\fP
.RE
.fi
where
.sp
.in
$DELTA u ~=~ ( u sub 2 - u sub 1 ) ^/^ n$
.in 0
.sp
.P
and $n$, $u sub 1$, and $u sub 2$
are the arguments to the most recent \%\f3glMapGrid1\fP command.
The one absolute numeric requirement is that if $i~=~n$,
then the value computed from 
$i ^cdot^ DELTA u ~+~ u sub 1$ is exactly $u sub 2$.
.P
In the two-dimensional case, \%\f3glEvalPoint2\fP, let 
.nf
.IP
$DELTA u ~=~ mark ( u sub 2 - u sub 1 ) ^/^ n$
.sp
$DELTA v ~=~ mark ( v sub 2 - v sub 1 ) ^/^ m,$
.RE
.fi
.P
where $n$, $u sub 1$, $u sub 2$, $m$, $v sub 1$, and $v sub 2$
are the arguments to the most recent \%\f3glMapGrid2\fP command.
Then the \%\f3glEvalPoint2\fP command is equivalent to calling
.nf
.IP
\f7
glEvalCoord2( i$^cdot^DELTA u ~+~ u sub 1$, j$^cdot^DELTA v ~+~ v sub 1$ );
\fP
.RE
.fi
The only absolute numeric requirements are that if $i~=~n$,
then the value computed from
$i ^cdot^DELTA u ~+~ u sub 1$ is exactly $u sub 2$,
and if $j~=~m$, then the value computed from 
$i ^cdot^DELTA v ~+~ v sub 1$ is exactly $v sub 2$.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_MAP1_GRID_DOMAIN\fP
.br
\%\f3glGet\fP with argument \%\f3GL_MAP2_GRID_DOMAIN\fP
.br
\%\f3glGet\fP with argument \%\f3GL_MAP1_GRID_SEGMENTS\fP
.br
\%\f3glGet\fP with argument \%\f3GL_MAP2_GRID_SEGMENTS\fP
.SH SEE ALSO
\%\f3glEvalCoord(3G)\fP,
\%\f3glEvalMesh(3G)\fP,
\%\f3glMap1(3G)\fP,
\%\f3glMap2(3G)\fP,
\%\f3glMapGrid(3G)\fP
