# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@




srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = XDarwin$(EXEEXT) Xquartz$(EXEEXT)
@XQUARTZ_TRUE@am__append_1 = -DDARWIN_WITH_QUARTZ -DXFree86Server
@XQUARTZ_TRUE@macos_PROGRAMS = XDarwinApp$(EXEEXT)
subdir = hw/darwin
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/do-not-use-config.h \
	$(top_builddir)/include/xorg-server.h \
	$(top_builddir)/include/dix-config.h \
	$(top_builddir)/include/xgl-config.h \
	$(top_builddir)/include/xorg-config.h \
	$(top_builddir)/include/xkb-config.h \
	$(top_builddir)/include/xwin-config.h \
	$(top_builddir)/include/kdrive-config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libdarwinShared_a_AR = $(AR) $(ARFLAGS)
libdarwinShared_a_LIBADD =
am_libdarwinShared_a_OBJECTS = darwin.$(OBJEXT) darwinEvents.$(OBJEXT) \
	darwinKeyboard.$(OBJEXT)
libdarwinShared_a_OBJECTS = $(am_libdarwinShared_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(crplugindir)" \
	"$(DESTDIR)$(fullscreenplugindir)" \
	"$(DESTDIR)$(glxAGLplugindir)" "$(DESTDIR)$(glxCGLplugindir)" \
	"$(DESTDIR)$(glxMesaplugindir)" "$(DESTDIR)$(xprplugindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(macosdir)" \
	"$(DESTDIR)$(macosdir)" "$(DESTDIR)$(man1dir)"
crpluginLTLIBRARIES_INSTALL = $(INSTALL)
fullscreenpluginLTLIBRARIES_INSTALL = $(INSTALL)
glxAGLpluginLTLIBRARIES_INSTALL = $(INSTALL)
glxCGLpluginLTLIBRARIES_INSTALL = $(INSTALL)
glxMesapluginLTLIBRARIES_INSTALL = $(INSTALL)
xprpluginLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(crplugin_LTLIBRARIES) $(fullscreenplugin_LTLIBRARIES) \
	$(glxAGLplugin_LTLIBRARIES) $(glxCGLplugin_LTLIBRARIES) \
	$(glxMesaplugin_LTLIBRARIES) $(xprplugin_LTLIBRARIES)
am__cr_la_SOURCES_DIST = quartz/cr/crAppleWM.m quartz/cr/crFrame.m \
	quartz/cr/crScreen.m quartz/fullscreen/quartzCursor.c \
	quartz/cr/XView.m
@XQUARTZ_TRUE@am_cr_la_OBJECTS = crAppleWM.lo crFrame.lo crScreen.lo \
@XQUARTZ_TRUE@	quartzCursor.lo XView.lo
cr_la_OBJECTS = $(am_cr_la_OBJECTS)
@XQUARTZ_TRUE@am_cr_la_rpath = -rpath $(crplugindir)
am__fullscreen_la_SOURCES_DIST = quartz/fullscreen/fullscreen.c \
	quartz/fullscreen/quartzCursor.c
@XQUARTZ_TRUE@am_fullscreen_la_OBJECTS = fullscreen.lo quartzCursor.lo
fullscreen_la_OBJECTS = $(am_fullscreen_la_OBJECTS)
@XQUARTZ_TRUE@am_fullscreen_la_rpath = -rpath $(fullscreenplugindir)
am_glxAGL_la_OBJECTS =
glxAGL_la_OBJECTS = $(am_glxAGL_la_OBJECTS)
@HAVE_AGL_FRAMEWORK_TRUE@am_glxAGL_la_rpath = -rpath \
@HAVE_AGL_FRAMEWORK_TRUE@	$(glxAGLplugindir)
am_glxCGL_la_OBJECTS =
glxCGL_la_OBJECTS = $(am_glxCGL_la_OBJECTS)
@HAVE_AGL_FRAMEWORK_TRUE@am_glxCGL_la_rpath = -rpath \
@HAVE_AGL_FRAMEWORK_TRUE@	$(glxCGLplugindir)
am_glxMesa_la_OBJECTS =
glxMesa_la_OBJECTS = $(am_glxMesa_la_OBJECTS)
@GLX_TRUE@@XQUARTZ_TRUE@am_glxMesa_la_rpath = -rpath \
@GLX_TRUE@@XQUARTZ_TRUE@	$(glxMesaplugindir)
am__xpr_la_SOURCES_DIST = quartz/xpr/appledri.c quartz/xpr/dri.c \
	quartz/xpr/xprAppleWM.c quartz/xpr/xprCursor.c \
	quartz/xpr/xprFrame.c quartz/xpr/xprScreen.c \
	quartz/xpr/x-hash.c quartz/xpr/x-hook.c quartz/xpr/x-list.c
@HAVE_X_PLUGIN_TRUE@am_xpr_la_OBJECTS = appledri.lo dri.lo \
@HAVE_X_PLUGIN_TRUE@	xprAppleWM.lo xprCursor.lo xprFrame.lo \
@HAVE_X_PLUGIN_TRUE@	xprScreen.lo x-hash.lo x-hook.lo x-list.lo
xpr_la_OBJECTS = $(am_xpr_la_OBJECTS)
@HAVE_X_PLUGIN_TRUE@am_xpr_la_rpath = -rpath $(xprplugindir)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
macosPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(macos_PROGRAMS)
am_XDarwin_OBJECTS = XDarwin-fbcmap_mi.$(OBJEXT) \
	XDarwin-miinitext.$(OBJEXT) XDarwin-stubs.$(OBJEXT)
XDarwin_OBJECTS = $(am_XDarwin_OBJECTS)
am__DEPENDENCIES_1 =
XDarwin_DEPENDENCIES = $(top_builddir)/dix/dixfonts.lo \
	$(top_builddir)/dix/libdix.la \
	$(top_builddir)/config/libconfig.a ./libdarwinShared.a \
	./iokit/libiokit.a $(top_builddir)/miext/shadow/libshadow.la \
	$(top_builddir)/miext/cw/libcw.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/miext/rootless/librootless.la \
	$(top_builddir)/miext/rootless/safeAlpha/libsafeAlpha.la \
	$(top_builddir)/miext/rootless/accel/librlAccel.la \
	$(am__DEPENDENCIES_1)
am__XDarwinApp_SOURCES_DIST = $(top_srcdir)/fb/fbcmap_mi.c \
	$(top_srcdir)/mi/miinitext.c $(top_srcdir)/Xi/stubs.c
@XQUARTZ_TRUE@am_XDarwinApp_OBJECTS = XDarwinApp-fbcmap_mi.$(OBJEXT) \
@XQUARTZ_TRUE@	XDarwinApp-miinitext.$(OBJEXT) \
@XQUARTZ_TRUE@	XDarwinApp-stubs.$(OBJEXT)
XDarwinApp_OBJECTS = $(am_XDarwinApp_OBJECTS)
@XQUARTZ_TRUE@XDarwinApp_DEPENDENCIES =  \
@XQUARTZ_TRUE@	$(top_builddir)/dix/dixfonts.lo \
@XQUARTZ_TRUE@	$(top_builddir)/dix/libdix.la \
@XQUARTZ_TRUE@	$(top_builddir)/config/libconfig.a \
@XQUARTZ_TRUE@	$(top_builddir)/os/libos.la \
@XQUARTZ_TRUE@	./quartz/XApplication.o ./libdarwinShared.a \
@XQUARTZ_TRUE@	./quartz/libXQuartz.a \
@XQUARTZ_TRUE@	$(top_builddir)/miext/shadow/libshadow.la \
@XQUARTZ_TRUE@	$(top_builddir)/miext/cw/libcw.la \
@XQUARTZ_TRUE@	$(am__DEPENDENCIES_1) \
@XQUARTZ_TRUE@	$(top_builddir)/miext/rootless/librootless.la \
@XQUARTZ_TRUE@	$(top_builddir)/miext/rootless/safeAlpha/libsafeAlpha.la \
@XQUARTZ_TRUE@	$(top_builddir)/miext/rootless/accel/librlAccel.la \
@XQUARTZ_TRUE@	$(am__DEPENDENCIES_1)
am_Xquartz_OBJECTS = Xquartz-fbcmap_mi.$(OBJEXT) \
	Xquartz-miinitext.$(OBJEXT) Xquartz-stubs.$(OBJEXT) \
	X11Application.$(OBJEXT) X11Controller.$(OBJEXT) \
	Preferences.$(OBJEXT) Xquartz-applewm.$(OBJEXT) \
	Xquartz-keysym2ucs.$(OBJEXT) Xquartz-pseudoramiX.$(OBJEXT) \
	Xquartz-quartz.$(OBJEXT) Xquartz-quartzAudio.$(OBJEXT) \
	quartzCocoa.$(OBJEXT) Xquartz-quartzKeyboard.$(OBJEXT) \
	Xquartz-quartzPasteboard.$(OBJEXT) \
	Xquartz-quartzStartup.$(OBJEXT) Xquartz-appledri.$(OBJEXT) \
	Xquartz-dri.$(OBJEXT) Xquartz-xprAppleWM.$(OBJEXT) \
	Xquartz-xprCursor.$(OBJEXT) Xquartz-xprFrame.$(OBJEXT) \
	Xquartz-xprScreen.$(OBJEXT) Xquartz-x-hash.$(OBJEXT) \
	Xquartz-x-hook.$(OBJEXT) Xquartz-x-list.$(OBJEXT)
Xquartz_OBJECTS = $(am_Xquartz_OBJECTS)
Xquartz_DEPENDENCIES = $(top_builddir)/dix/dixfonts.lo \
	$(top_builddir)/dix/libdix.la \
	$(top_builddir)/config/libconfig.a ./libdarwinShared.a \
	$(top_builddir)/miext/shadow/libshadow.la \
	$(top_builddir)/miext/cw/libcw.la $(am__DEPENDENCIES_1) \
	$(top_builddir)/miext/rootless/librootless.la \
	$(top_builddir)/miext/rootless/safeAlpha/libsafeAlpha.la \
	$(top_builddir)/miext/rootless/accel/librlAccel.la \
	$(am__DEPENDENCIES_1)
macosSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(macos_SCRIPTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include -I$(top_builddir)/include -I$(top_builddir)/include -I$(top_builddir)/include -I$(top_builddir)/include -I$(top_builddir)/include -I$(top_builddir)/include -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
OBJCCOMPILE = $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS)
LTOBJCCOMPILE = $(LIBTOOL) --mode=compile $(OBJC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_OBJCFLAGS) $(OBJCFLAGS)
OBJCLD = $(OBJC)
SOURCES = $(libdarwinShared_a_SOURCES) $(cr_la_SOURCES) \
	$(fullscreen_la_SOURCES) $(glxAGL_la_SOURCES) \
	$(glxCGL_la_SOURCES) $(glxMesa_la_SOURCES) $(xpr_la_SOURCES) \
	$(XDarwin_SOURCES) $(XDarwinApp_SOURCES) $(Xquartz_SOURCES)
DIST_SOURCES = $(libdarwinShared_a_SOURCES) $(am__cr_la_SOURCES_DIST) \
	$(am__fullscreen_la_SOURCES_DIST) $(glxAGL_la_SOURCES) \
	$(glxCGL_la_SOURCES) $(glxMesa_la_SOURCES) \
	$(am__xpr_la_SOURCES_DIST) $(XDarwin_SOURCES) \
	$(am__XDarwinApp_SOURCES_DIST) $(Xquartz_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(man1_MANS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = iokit bundle quartz utils .
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ADMIN_MAN_DIR = @ADMIN_MAN_DIR@
ADMIN_MAN_SUFFIX = @ADMIN_MAN_SUFFIX@
AFB_FALSE = @AFB_FALSE@
AFB_TRUE = @AFB_TRUE@
AGP_FALSE = @AGP_FALSE@
AGP_TRUE = @AGP_TRUE@
AIGLX_FALSE = @AIGLX_FALSE@
AIGLX_TRUE = @AIGLX_TRUE@
ALLOCA = @ALLOCA@
ALPHA_VIDEO_FALSE = @ALPHA_VIDEO_FALSE@
ALPHA_VIDEO_TRUE = @ALPHA_VIDEO_TRUE@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
APPDEFAULTDIR = @APPDEFAULTDIR@
APPGROUP_FALSE = @APPGROUP_FALSE@
APPGROUP_TRUE = @APPGROUP_TRUE@
APPLE_APPLICATIONS_DIR = @APPLE_APPLICATIONS_DIR@
APP_MAN_DIR = @APP_MAN_DIR@
APP_MAN_SUFFIX = @APP_MAN_SUFFIX@
AR = @AR@
ARM_VIDEO_FALSE = @ARM_VIDEO_FALSE@
ARM_VIDEO_TRUE = @ARM_VIDEO_TRUE@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASE_FONT_PATH = @BASE_FONT_PATH@
BSD_APM_FALSE = @BSD_APM_FALSE@
BSD_APM_TRUE = @BSD_APM_TRUE@
BSD_KBD_MODE_FALSE = @BSD_KBD_MODE_FALSE@
BSD_KBD_MODE_TRUE = @BSD_KBD_MODE_TRUE@
BSD_KQUEUE_APM_FALSE = @BSD_KQUEUE_APM_FALSE@
BSD_KQUEUE_APM_TRUE = @BSD_KQUEUE_APM_TRUE@
BUILDDOCS_FALSE = @BUILDDOCS_FALSE@
BUILDDOCS_TRUE = @BUILDDOCS_TRUE@
BUILD_DARWIN_FALSE = @BUILD_DARWIN_FALSE@
BUILD_DARWIN_TRUE = @BUILD_DARWIN_TRUE@
BUILD_DATE = @BUILD_DATE@
BUILD_IOPORT_FALSE = @BUILD_IOPORT_FALSE@
BUILD_IOPORT_TRUE = @BUILD_IOPORT_TRUE@
BUILD_KBD_MODE_FALSE = @BUILD_KBD_MODE_FALSE@
BUILD_KBD_MODE_TRUE = @BUILD_KBD_MODE_TRUE@
BUILD_KDRIVEFBDEVLIB_FALSE = @BUILD_KDRIVEFBDEVLIB_FALSE@
BUILD_KDRIVEFBDEVLIB_TRUE = @BUILD_KDRIVEFBDEVLIB_TRUE@
BUILD_LINUXDOC_FALSE = @BUILD_LINUXDOC_FALSE@
BUILD_LINUXDOC_TRUE = @BUILD_LINUXDOC_TRUE@
BUILD_PDFDOC_FALSE = @BUILD_PDFDOC_FALSE@
BUILD_PDFDOC_TRUE = @BUILD_PDFDOC_TRUE@
BUILD_TIME = @BUILD_TIME@
BUILD_XORGCFG_FALSE = @BUILD_XORGCFG_FALSE@
BUILD_XORGCFG_TRUE = @BUILD_XORGCFG_TRUE@
CC = @CC@
CCAS = @CCAS@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFB_FALSE = @CFB_FALSE@
CFB_TRUE = @CFB_TRUE@
CFLAGS = @CFLAGS@
COMPILEDDEFAULTFONTPATH = @COMPILEDDEFAULTFONTPATH@
COMPOSITE_FALSE = @COMPOSITE_FALSE@
COMPOSITE_TRUE = @COMPOSITE_TRUE@
CONFIG_DBUS_API_FALSE = @CONFIG_DBUS_API_FALSE@
CONFIG_DBUS_API_TRUE = @CONFIG_DBUS_API_TRUE@
CONFIG_HAL_FALSE = @CONFIG_HAL_FALSE@
CONFIG_HAL_TRUE = @CONFIG_HAL_TRUE@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CUP_FALSE = @CUP_FALSE@
CUP_TRUE = @CUP_TRUE@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DARWIN_LIBS = @DARWIN_LIBS@
DBE_FALSE = @DBE_FALSE@
DBE_TRUE = @DBE_TRUE@
DBUS_CFLAGS = @DBUS_CFLAGS@
DBUS_LIBS = @DBUS_LIBS@
DEBUG_FALSE = @DEBUG_FALSE@
DEBUG_TRUE = @DEBUG_TRUE@
DEFAULT_LIBRARY_PATH = @DEFAULT_LIBRARY_PATH@
DEFAULT_LOGPREFIX = @DEFAULT_LOGPREFIX@
DEFAULT_MODULE_PATH = @DEFAULT_MODULE_PATH@
DEFS = @DEFS@ -DUSE_NEW_CLUT $(am__append_1)
DEPDIR = @DEPDIR@
DGA_CFLAGS = @DGA_CFLAGS@
DGA_FALSE = @DGA_FALSE@
DGA_LIBS = @DGA_LIBS@
DGA_TRUE = @DGA_TRUE@
DIX_CFLAGS = @DIX_CFLAGS@
DLLTOOL = @DLLTOOL@
DMXEXAMPLES_DEP_CFLAGS = @DMXEXAMPLES_DEP_CFLAGS@
DMXEXAMPLES_DEP_LIBS = @DMXEXAMPLES_DEP_LIBS@
DMXMODULES_CFLAGS = @DMXMODULES_CFLAGS@
DMXMODULES_LIBS = @DMXMODULES_LIBS@
DMXXIEXAMPLES_DEP_CFLAGS = @DMXXIEXAMPLES_DEP_CFLAGS@
DMXXIEXAMPLES_DEP_LIBS = @DMXXIEXAMPLES_DEP_LIBS@
DMXXMUEXAMPLES_DEP_CFLAGS = @DMXXMUEXAMPLES_DEP_CFLAGS@
DMXXMUEXAMPLES_DEP_LIBS = @DMXXMUEXAMPLES_DEP_LIBS@
DMX_BUILD_LNX_FALSE = @DMX_BUILD_LNX_FALSE@
DMX_BUILD_LNX_TRUE = @DMX_BUILD_LNX_TRUE@
DMX_BUILD_USB_FALSE = @DMX_BUILD_USB_FALSE@
DMX_BUILD_USB_TRUE = @DMX_BUILD_USB_TRUE@
DMX_FALSE = @DMX_FALSE@
DMX_TRUE = @DMX_TRUE@
DPMSExtension_FALSE = @DPMSExtension_FALSE@
DPMSExtension_TRUE = @DPMSExtension_TRUE@
DRIPROTO_CFLAGS = @DRIPROTO_CFLAGS@
DRIPROTO_LIBS = @DRIPROTO_LIBS@
DRIVER_MAN_DIR = @DRIVER_MAN_DIR@
DRIVER_MAN_SUFFIX = @DRIVER_MAN_SUFFIX@
DRI_DRIVER_PATH = @DRI_DRIVER_PATH@
DRI_FALSE = @DRI_FALSE@
DRI_TRUE = @DRI_TRUE@
DSYMUTIL = @DSYMUTIL@
DTRACE = @DTRACE@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EVI_FALSE = @EVI_FALSE@
EVI_TRUE = @EVI_TRUE@
EXEEXT = @EXEEXT@
F77 = @F77@
FBDEVHW_FALSE = @FBDEVHW_FALSE@
FBDEVHW_TRUE = @FBDEVHW_TRUE@
FFLAGS = @FFLAGS@
FILE_MAN_DIR = @FILE_MAN_DIR@
FILE_MAN_SUFFIX = @FILE_MAN_SUFFIX@
FONTCACHE_FALSE = @FONTCACHE_FALSE@
FONTCACHE_TRUE = @FONTCACHE_TRUE@
FREEBSD_KLDLOAD_FALSE = @FREEBSD_KLDLOAD_FALSE@
FREEBSD_KLDLOAD_TRUE = @FREEBSD_KLDLOAD_TRUE@
FREETYPE_CFLAGS = @FREETYPE_CFLAGS@
FREETYPE_LIBS = @FREETYPE_LIBS@
FREETYPE_REQUIRES = @FREETYPE_REQUIRES@
GLX_DEFINES = @GLX_DEFINES@
GLX_FALSE = @GLX_FALSE@
GLX_TRUE = @GLX_TRUE@
GL_CFLAGS = @GL_CFLAGS@
GL_LIBS = @GL_LIBS@
H3600_TS_FALSE = @H3600_TS_FALSE@
H3600_TS_TRUE = @H3600_TS_TRUE@
HAL_CFLAGS = @HAL_CFLAGS@
HAL_LIBS = @HAL_LIBS@
HAVE_AGL_FRAMEWORK_FALSE = @HAVE_AGL_FRAMEWORK_FALSE@
HAVE_AGL_FRAMEWORK_TRUE = @HAVE_AGL_FRAMEWORK_TRUE@
HAVE_DBUS_FALSE = @HAVE_DBUS_FALSE@
HAVE_DBUS_TRUE = @HAVE_DBUS_TRUE@
HAVE_X_PLUGIN_FALSE = @HAVE_X_PLUGIN_FALSE@
HAVE_X_PLUGIN_TRUE = @HAVE_X_PLUGIN_TRUE@
HP300_VIDEO_FALSE = @HP300_VIDEO_FALSE@
HP300_VIDEO_TRUE = @HP300_VIDEO_TRUE@
HPPA_VIDEO_FALSE = @HPPA_VIDEO_FALSE@
HPPA_VIDEO_TRUE = @HPPA_VIDEO_TRUE@
I386_VIDEO_FALSE = @I386_VIDEO_FALSE@
I386_VIDEO_TRUE = @I386_VIDEO_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_LIBXF86CONFIG_FALSE = @INSTALL_LIBXF86CONFIG_FALSE@
INSTALL_LIBXF86CONFIG_TRUE = @INSTALL_LIBXF86CONFIG_TRUE@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_SETUID_FALSE = @INSTALL_SETUID_FALSE@
INSTALL_SETUID_TRUE = @INSTALL_SETUID_TRUE@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INT10_STUB_FALSE = @INT10_STUB_FALSE@
INT10_STUB_TRUE = @INT10_STUB_TRUE@
INT10_VM86_FALSE = @INT10_VM86_FALSE@
INT10_VM86_TRUE = @INT10_VM86_TRUE@
INT10_X86EMU_FALSE = @INT10_X86EMU_FALSE@
INT10_X86EMU_TRUE = @INT10_X86EMU_TRUE@
KDRIVEFBDEV_FALSE = @KDRIVEFBDEV_FALSE@
KDRIVEFBDEV_TRUE = @KDRIVEFBDEV_TRUE@
KDRIVELINUX_FALSE = @KDRIVELINUX_FALSE@
KDRIVELINUX_TRUE = @KDRIVELINUX_TRUE@
KDRIVEOPENBSD_FALSE = @KDRIVEOPENBSD_FALSE@
KDRIVEOPENBSD_TRUE = @KDRIVEOPENBSD_TRUE@
KDRIVEVESA_FALSE = @KDRIVEVESA_FALSE@
KDRIVEVESA_TRUE = @KDRIVEVESA_TRUE@
KDRIVEWSCONS_FALSE = @KDRIVEWSCONS_FALSE@
KDRIVEWSCONS_TRUE = @KDRIVEWSCONS_TRUE@
KDRIVE_CFLAGS = @KDRIVE_CFLAGS@
KDRIVE_FALSE = @KDRIVE_FALSE@
KDRIVE_HW_FALSE = @KDRIVE_HW_FALSE@
KDRIVE_HW_TRUE = @KDRIVE_HW_TRUE@
KDRIVE_INCS = @KDRIVE_INCS@
KDRIVE_LIBS = @KDRIVE_LIBS@
KDRIVE_LOCAL_LIBS = @KDRIVE_LOCAL_LIBS@
KDRIVE_PURE_INCS = @KDRIVE_PURE_INCS@
KDRIVE_PURE_LIBS = @KDRIVE_PURE_LIBS@
KDRIVE_TRUE = @KDRIVE_TRUE@
LDFLAGS = @LDFLAGS@
LD_EXPORT_SYMBOLS_FLAG = @LD_EXPORT_SYMBOLS_FLAG@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBDRM_CFLAGS = @LIBDRM_CFLAGS@
LIBDRM_LIBS = @LIBDRM_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIB_MAN_DIR = @LIB_MAN_DIR@
LIB_MAN_SUFFIX = @LIB_MAN_SUFFIX@
LINUXDOC = @LINUXDOC@
LINUX_ALPHA_FALSE = @LINUX_ALPHA_FALSE@
LINUX_ALPHA_TRUE = @LINUX_ALPHA_TRUE@
LINUX_IA64_FALSE = @LINUX_IA64_FALSE@
LINUX_IA64_TRUE = @LINUX_IA64_TRUE@
LNXACPI_FALSE = @LNXACPI_FALSE@
LNXACPI_TRUE = @LNXACPI_TRUE@
LNXAPM_FALSE = @LNXAPM_FALSE@
LNXAPM_TRUE = @LNXAPM_TRUE@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MAKE_HTML = @MAKE_HTML@
MAKE_PDF = @MAKE_PDF@
MAKE_PS = @MAKE_PS@
MAKE_TEXT = @MAKE_TEXT@
MESA_SOURCE = @MESA_SOURCE@
MFB_FALSE = @MFB_FALSE@
MFB_TRUE = @MFB_TRUE@
MISC_MAN_DIR = @MISC_MAN_DIR@
MISC_MAN_SUFFIX = @MISC_MAN_SUFFIX@
MITSHM_FALSE = @MITSHM_FALSE@
MITSHM_TRUE = @MITSHM_TRUE@
MKFONTDIR = @MKFONTDIR@
MKFONTSCALE = @MKFONTSCALE@
MULTIBUFFER_FALSE = @MULTIBUFFER_FALSE@
MULTIBUFFER_TRUE = @MULTIBUFFER_TRUE@
NEED_STRLCAT_FALSE = @NEED_STRLCAT_FALSE@
NEED_STRLCAT_TRUE = @NEED_STRLCAT_TRUE@
NEED_VSNPRINTF_FALSE = @NEED_VSNPRINTF_FALSE@
NEED_VSNPRINTF_TRUE = @NEED_VSNPRINTF_TRUE@
NMEDIT = @NMEDIT@
OBJC = @OBJC@
OBJCCLD = @OBJCCLD@
OBJCDEPMODE = @OBJCDEPMODE@
OBJCFLAGS = @OBJCFLAGS@
OBJCLINK = @OBJCLINK@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PIXMAN_CFLAGS = @PIXMAN_CFLAGS@
PIXMAN_LIBS = @PIXMAN_LIBS@
PKG_CONFIG = @PKG_CONFIG@
PLIST_VENDOR_WEB = @PLIST_VENDOR_WEB@
PLIST_VERSION_STRING = @PLIST_VERSION_STRING@
PPC_VIDEO_FALSE = @PPC_VIDEO_FALSE@
PPC_VIDEO_TRUE = @PPC_VIDEO_TRUE@
PROJECTROOT = @PROJECTROOT@
PS2PDF = @PS2PDF@
RANLIB = @RANLIB@
RAWCPP = @RAWCPP@
RAWCPPFLAGS = @RAWCPPFLAGS@
RECORD_FALSE = @RECORD_FALSE@
RECORD_TRUE = @RECORD_TRUE@
RES_FALSE = @RES_FALSE@
RES_TRUE = @RES_TRUE@
RGB_DB = @RGB_DB@
SCREENSAVER_FALSE = @SCREENSAVER_FALSE@
SCREENSAVER_TRUE = @SCREENSAVER_TRUE@
SECURE_RPC_FALSE = @SECURE_RPC_FALSE@
SECURE_RPC_TRUE = @SECURE_RPC_TRUE@
SED = @SED@
SERVERCONFIGdir = @SERVERCONFIGdir@
SET_MAKE = @SET_MAKE@
SGI_VIDEO_FALSE = @SGI_VIDEO_FALSE@
SGI_VIDEO_TRUE = @SGI_VIDEO_TRUE@
SHELL = @SHELL@
SOLARIS_ASM_CFLAGS = @SOLARIS_ASM_CFLAGS@
SOLARIS_ASM_INLINE_FALSE = @SOLARIS_ASM_INLINE_FALSE@
SOLARIS_ASM_INLINE_TRUE = @SOLARIS_ASM_INLINE_TRUE@
SOLARIS_INOUT_ARCH = @SOLARIS_INOUT_ARCH@
SOLARIS_USL_CONSOLE_FALSE = @SOLARIS_USL_CONSOLE_FALSE@
SOLARIS_USL_CONSOLE_TRUE = @SOLARIS_USL_CONSOLE_TRUE@
SPARC64_VIDEO_FALSE = @SPARC64_VIDEO_FALSE@
SPARC64_VIDEO_TRUE = @SPARC64_VIDEO_TRUE@
STRIP = @STRIP@
SUN_KBD_MODE_FALSE = @SUN_KBD_MODE_FALSE@
SUN_KBD_MODE_TRUE = @SUN_KBD_MODE_TRUE@
SYS_LIBS = @SYS_LIBS@
TSLIB_CFLAGS = @TSLIB_CFLAGS@
TSLIB_FALSE = @TSLIB_FALSE@
TSLIB_LIBS = @TSLIB_LIBS@
TSLIB_TRUE = @TSLIB_TRUE@
USE_CURSES_FALSE = @USE_CURSES_FALSE@
USE_CURSES_TRUE = @USE_CURSES_TRUE@
USE_RGB_BUILTIN_FALSE = @USE_RGB_BUILTIN_FALSE@
USE_RGB_BUILTIN_TRUE = @USE_RGB_BUILTIN_TRUE@
VENDOR_MAN_VERSION = @VENDOR_MAN_VERSION@
VENDOR_NAME = @VENDOR_NAME@
VENDOR_NAME_SHORT = @VENDOR_NAME_SHORT@
VENDOR_RELEASE = @VENDOR_RELEASE@
VERSION = @VERSION@
X11EXAMPLES_DEP_CFLAGS = @X11EXAMPLES_DEP_CFLAGS@
X11EXAMPLES_DEP_LIBS = @X11EXAMPLES_DEP_LIBS@
XACE_FALSE = @XACE_FALSE@
XACE_TRUE = @XACE_TRUE@
XCALIBRATE_FALSE = @XCALIBRATE_FALSE@
XCALIBRATE_TRUE = @XCALIBRATE_TRUE@
XCSECURITY_FALSE = @XCSECURITY_FALSE@
XCSECURITY_TRUE = @XCSECURITY_TRUE@
XDMAUTH_FALSE = @XDMAUTH_FALSE@
XDMAUTH_TRUE = @XDMAUTH_TRUE@
XDMCP_CFLAGS = @XDMCP_CFLAGS@
XDMCP_FALSE = @XDMCP_FALSE@
XDMCP_LIBS = @XDMCP_LIBS@
XDMCP_TRUE = @XDMCP_TRUE@
XDMXCONFIG_DEP_CFLAGS = @XDMXCONFIG_DEP_CFLAGS@
XDMXCONFIG_DEP_LIBS = @XDMXCONFIG_DEP_LIBS@
XDMX_LIBS = @XDMX_LIBS@
XEGLMODULES_CFLAGS = @XEGLMODULES_CFLAGS@
XEGLMODULES_LIBS = @XEGLMODULES_LIBS@
XEGL_FALSE = @XEGL_FALSE@
XEGL_LIBS = @XEGL_LIBS@
XEGL_TRUE = @XEGL_TRUE@
XEPHYR_CFLAGS = @XEPHYR_CFLAGS@
XEPHYR_FALSE = @XEPHYR_FALSE@
XEPHYR_INCS = @XEPHYR_INCS@
XEPHYR_LIBS = @XEPHYR_LIBS@
XEPHYR_TRUE = @XEPHYR_TRUE@
XERRORDB_PATH = @XERRORDB_PATH@
XEVIE_FALSE = @XEVIE_FALSE@
XEVIE_TRUE = @XEVIE_TRUE@
XF86BIGFONT_FALSE = @XF86BIGFONT_FALSE@
XF86BIGFONT_TRUE = @XF86BIGFONT_TRUE@
XF86CONFIGFILE = @XF86CONFIGFILE@
XF86MISC_CFLAGS = @XF86MISC_CFLAGS@
XF86MISC_FALSE = @XF86MISC_FALSE@
XF86MISC_LIBS = @XF86MISC_LIBS@
XF86MISC_TRUE = @XF86MISC_TRUE@
XF86UTILS_FALSE = @XF86UTILS_FALSE@
XF86UTILS_TRUE = @XF86UTILS_TRUE@
XF86VIDMODE_CFLAGS = @XF86VIDMODE_CFLAGS@
XF86VIDMODE_FALSE = @XF86VIDMODE_FALSE@
XF86VIDMODE_LIBS = @XF86VIDMODE_LIBS@
XF86VIDMODE_TRUE = @XF86VIDMODE_TRUE@
XFAKESERVER_FALSE = @XFAKESERVER_FALSE@
XFAKESERVER_TRUE = @XFAKESERVER_TRUE@
XGLMODULES_CFLAGS = @XGLMODULES_CFLAGS@
XGLMODULES_LIBS = @XGLMODULES_LIBS@
XGLXMODULES_CFLAGS = @XGLXMODULES_CFLAGS@
XGLXMODULES_LIBS = @XGLXMODULES_LIBS@
XGLX_FALSE = @XGLX_FALSE@
XGLX_LIBS = @XGLX_LIBS@
XGLX_TRUE = @XGLX_TRUE@
XGL_FALSE = @XGL_FALSE@
XGL_LIBS = @XGL_LIBS@
XGL_MODULE_PATH = @XGL_MODULE_PATH@
XGL_TRUE = @XGL_TRUE@
XINERAMA_FALSE = @XINERAMA_FALSE@
XINERAMA_TRUE = @XINERAMA_TRUE@
XKB_BASE_DIRECTORY = @XKB_BASE_DIRECTORY@
XKB_BIN_DIRECTORY = @XKB_BIN_DIRECTORY@
XKB_COMPILED_DIR = @XKB_COMPILED_DIR@
XKM_OUTPUT_DIR = @XKM_OUTPUT_DIR@
XLIB_CFLAGS = @XLIB_CFLAGS@
XLIB_LIBS = @XLIB_LIBS@
XNESTMODULES_CFLAGS = @XNESTMODULES_CFLAGS@
XNESTMODULES_LIBS = @XNESTMODULES_LIBS@
XNEST_FALSE = @XNEST_FALSE@
XNEST_LIBS = @XNEST_LIBS@
XNEST_TRUE = @XNEST_TRUE@
XORGCFG_DEP_CFLAGS = @XORGCFG_DEP_CFLAGS@
XORGCFG_DEP_LIBS = @XORGCFG_DEP_LIBS@
XORGCONFIG_DEP_CFLAGS = @XORGCONFIG_DEP_CFLAGS@
XORGCONFIG_DEP_LIBS = @XORGCONFIG_DEP_LIBS@
XORG_BUS_FREEBSDPCI_FALSE = @XORG_BUS_FREEBSDPCI_FALSE@
XORG_BUS_FREEBSDPCI_TRUE = @XORG_BUS_FREEBSDPCI_TRUE@
XORG_BUS_IX86PCI_FALSE = @XORG_BUS_IX86PCI_FALSE@
XORG_BUS_IX86PCI_TRUE = @XORG_BUS_IX86PCI_TRUE@
XORG_BUS_LINUXPCI_FALSE = @XORG_BUS_LINUXPCI_FALSE@
XORG_BUS_LINUXPCI_TRUE = @XORG_BUS_LINUXPCI_TRUE@
XORG_BUS_NETBSDPCI_FALSE = @XORG_BUS_NETBSDPCI_FALSE@
XORG_BUS_NETBSDPCI_TRUE = @XORG_BUS_NETBSDPCI_TRUE@
XORG_BUS_PPCPCI_FALSE = @XORG_BUS_PPCPCI_FALSE@
XORG_BUS_PPCPCI_TRUE = @XORG_BUS_PPCPCI_TRUE@
XORG_BUS_SPARCPCI_FALSE = @XORG_BUS_SPARCPCI_FALSE@
XORG_BUS_SPARCPCI_TRUE = @XORG_BUS_SPARCPCI_TRUE@
XORG_BUS_SPARC_FALSE = @XORG_BUS_SPARC_FALSE@
XORG_BUS_SPARC_TRUE = @XORG_BUS_SPARC_TRUE@
XORG_CFLAGS = @XORG_CFLAGS@
XORG_CORE_LIBS = @XORG_CORE_LIBS@
XORG_FALSE = @XORG_FALSE@
XORG_INCS = @XORG_INCS@
XORG_LIBS = @XORG_LIBS@
XORG_LOADER_SPARC_FALSE = @XORG_LOADER_SPARC_FALSE@
XORG_LOADER_SPARC_TRUE = @XORG_LOADER_SPARC_TRUE@
XORG_MODULES_CFLAGS = @XORG_MODULES_CFLAGS@
XORG_MODULES_LIBS = @XORG_MODULES_LIBS@
XORG_OS = @XORG_OS@
XORG_OS_SUBDIR = @XORG_OS_SUBDIR@
XORG_TRUE = @XORG_TRUE@
XPRINTPROTO_CFLAGS = @XPRINTPROTO_CFLAGS@
XPRINTPROTO_LIBS = @XPRINTPROTO_LIBS@
XPRINT_CFLAGS = @XPRINT_CFLAGS@
XPRINT_FALSE = @XPRINT_FALSE@
XPRINT_LIBS = @XPRINT_LIBS@
XPRINT_TRUE = @XPRINT_TRUE@
XP_USE_FREETYPE_FALSE = @XP_USE_FREETYPE_FALSE@
XP_USE_FREETYPE_TRUE = @XP_USE_FREETYPE_TRUE@
XQUARTZ_FALSE = @XQUARTZ_FALSE@
XQUARTZ_TRUE = @XQUARTZ_TRUE@
XRESEXAMPLES_DEP_CFLAGS = @XRESEXAMPLES_DEP_CFLAGS@
XRESEXAMPLES_DEP_LIBS = @XRESEXAMPLES_DEP_LIBS@
XSDLSERVER_FALSE = @XSDLSERVER_FALSE@
XSDLSERVER_TRUE = @XSDLSERVER_TRUE@
XSDL_INCS = @XSDL_INCS@
XSDL_LIBS = @XSDL_LIBS@
XSERVERCFLAGS_CFLAGS = @XSERVERCFLAGS_CFLAGS@
XSERVERCFLAGS_LIBS = @XSERVERCFLAGS_LIBS@
XSERVERLIBS_CFLAGS = @XSERVERLIBS_CFLAGS@
XSERVERLIBS_LIBS = @XSERVERLIBS_LIBS@
XSERVER_DTRACE_FALSE = @XSERVER_DTRACE_FALSE@
XSERVER_DTRACE_TRUE = @XSERVER_DTRACE_TRUE@
XSERVER_LIBS = @XSERVER_LIBS@
XTRAP_FALSE = @XTRAP_FALSE@
XTRAP_TRUE = @XTRAP_TRUE@
XTSTEXAMPLES_DEP_CFLAGS = @XTSTEXAMPLES_DEP_CFLAGS@
XTSTEXAMPLES_DEP_LIBS = @XTSTEXAMPLES_DEP_LIBS@
XVFB_FALSE = @XVFB_FALSE@
XVFB_LIBS = @XVFB_LIBS@
XVFB_TRUE = @XVFB_TRUE@
XVMC_FALSE = @XVMC_FALSE@
XVMC_TRUE = @XVMC_TRUE@
XV_FALSE = @XV_FALSE@
XV_TRUE = @XV_TRUE@
XWINMODULES_CFLAGS = @XWINMODULES_CFLAGS@
XWINMODULES_LIBS = @XWINMODULES_LIBS@
XWIN_CLIPBOARD_FALSE = @XWIN_CLIPBOARD_FALSE@
XWIN_CLIPBOARD_TRUE = @XWIN_CLIPBOARD_TRUE@
XWIN_FALSE = @XWIN_FALSE@
XWIN_GLX_WINDOWS_FALSE = @XWIN_GLX_WINDOWS_FALSE@
XWIN_GLX_WINDOWS_TRUE = @XWIN_GLX_WINDOWS_TRUE@
XWIN_LIBS = @XWIN_LIBS@
XWIN_MULTIWINDOWEXTWM_FALSE = @XWIN_MULTIWINDOWEXTWM_FALSE@
XWIN_MULTIWINDOWEXTWM_TRUE = @XWIN_MULTIWINDOWEXTWM_TRUE@
XWIN_MULTIWINDOW_FALSE = @XWIN_MULTIWINDOW_FALSE@
XWIN_MULTIWINDOW_TRUE = @XWIN_MULTIWINDOW_TRUE@
XWIN_NATIVEGDI_FALSE = @XWIN_NATIVEGDI_FALSE@
XWIN_NATIVEGDI_TRUE = @XWIN_NATIVEGDI_TRUE@
XWIN_PRIMARYFB_FALSE = @XWIN_PRIMARYFB_FALSE@
XWIN_PRIMARYFB_TRUE = @XWIN_PRIMARYFB_TRUE@
XWIN_RANDR_FALSE = @XWIN_RANDR_FALSE@
XWIN_RANDR_TRUE = @XWIN_RANDR_TRUE@
XWIN_SERVER_NAME = @XWIN_SERVER_NAME@
XWIN_SYSTEM_LIBS = @XWIN_SYSTEM_LIBS@
XWIN_TRUE = @XWIN_TRUE@
XWIN_XV_FALSE = @XWIN_XV_FALSE@
XWIN_XV_TRUE = @XWIN_XV_TRUE@
X_PRIVSEP_FALSE = @X_PRIVSEP_FALSE@
X_PRIVSEP_TRUE = @X_PRIVSEP_TRUE@
YACC = @YACC@
__XCONFIGFILE__ = @__XCONFIGFILE__@
ac_ct_AR = @ac_ct_AR@
ac_ct_AS = @ac_ct_AS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DLLTOOL = @ac_ct_DLLTOOL@
ac_ct_DSYMUTIL = @ac_ct_DSYMUTIL@
ac_ct_F77 = @ac_ct_F77@
ac_ct_NMEDIT = @ac_ct_NMEDIT@
ac_ct_OBJDUMP = @ac_ct_OBJDUMP@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
ac_pt_PKG_CONFIG = @ac_pt_PKG_CONFIG@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__fastdepOBJC_FALSE = @am__fastdepOBJC_FALSE@
am__fastdepOBJC_TRUE = @am__fastdepOBJC_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
driverdir = @driverdir@
exec_prefix = @exec_prefix@
extdir = @extdir@
ft_config = @ft_config@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
logdir = @logdir@
mandir = @mandir@
mkdir_p = @mkdir_p@
moduledir = @moduledir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sdkdir = @sdkdir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
xglmoduledir = @xglmoduledir@
xpconfigdir = @xpconfigdir@
noinst_LIBRARIES = libdarwinShared.a
libdarwin_XINPUT_SRCS = darwinXinput.c
AM_CFLAGS = @XORG_CFLAGS@ @DIX_CFLAGS@
AM_CPPFLAGS = @XORG_CFLAGS@ @DIX_CFLAGS@
INCLUDES = @XORG_INCS@ -I../../miext/rootless
@XQUARTZ_TRUE@XQUARTZ_SUBDIRS = bundle quartz
SUBDIRS = \
	  iokit \
	  $(XQUARTZ_SUBDIRS) \
	  utils \
	  .

darwinappdir = @APPLE_APPLICATIONS_DIR@/XDarwin.app
libdarwinShared_a_SOURCES = darwin.c \
			  darwinEvents.c \
			  darwinKeyboard.c \
			  $(darwin_XINPUT_SRCS) 

XDarwin_SOURCES = \
                  $(top_srcdir)/fb/fbcmap_mi.c \
                  $(top_srcdir)/mi/miinitext.c \
                  $(top_srcdir)/Xi/stubs.c

Xquartz_SOURCES = \
                  $(top_srcdir)/fb/fbcmap_mi.c \
                  $(top_srcdir)/mi/miinitext.c \
                  $(top_srcdir)/Xi/stubs.c \
                  apple/X11Application.m \
                  apple/X11Controller.m \
                  quartz/Preferences.m \
                  quartz/applewm.c \
                  quartz/keysym2ucs.c \
                  quartz/pseudoramiX.c \
                  quartz/quartz.c \
                  quartz/quartzAudio.c \
                  quartz/quartzCocoa.m \
                  quartz/quartzKeyboard.c \
                  quartz/quartzPasteboard.c \
                  quartz/quartzStartup.c \
                  quartz/xpr/appledri.c \
                  quartz/xpr/dri.c \
                  quartz/xpr/xprAppleWM.c \
                  quartz/xpr/xprCursor.c \
                  quartz/xpr/xprFrame.c \
                  quartz/xpr/xprScreen.c \
                  quartz/xpr/x-hash.c \
                  quartz/xpr/x-hook.c \
                  quartz/xpr/x-list.c

XDarwin_LDADD = \
		$(top_builddir)/dix/dixfonts.lo \
		$(top_builddir)/dix/libdix.la \
		$(top_builddir)/config/libconfig.a \
		./libdarwinShared.a \
		./iokit/libiokit.a \
		$(top_builddir)/miext/shadow/libshadow.la \
		$(top_builddir)/miext/cw/libcw.la \
		$(DARWIN_LIBS) \
		$(top_builddir)/miext/rootless/librootless.la \
		$(top_builddir)/miext/rootless/safeAlpha/libsafeAlpha.la \
		$(top_builddir)/miext/rootless/accel/librlAccel.la \
		@XORG_LIBS@ \
		$(XSERVER_LIBS)

Xquartz_LDADD = \
		$(top_builddir)/dix/dixfonts.lo \
		$(top_builddir)/dix/libdix.la \
		$(top_builddir)/config/libconfig.a \
		./libdarwinShared.a \
		$(top_builddir)/miext/shadow/libshadow.la \
		$(top_builddir)/miext/cw/libcw.la \
		$(DARWIN_LIBS) \
		$(top_builddir)/miext/rootless/librootless.la \
		$(top_builddir)/miext/rootless/safeAlpha/libsafeAlpha.la \
		$(top_builddir)/miext/rootless/accel/librlAccel.la \
		@XORG_LIBS@ \
		$(XSERVER_LIBS) -lXplugin

XDarwin_LDFLAGS = \
                 -XCClinker -Objc \
                 -Wl,-u,_miDCInitialize \
                 -Wl,-framework,IOKit

Xquartz_LDFLAGS = \
                 -XCClinker -Objc \
                 -Wl,-u,_miDCInitialize \
                 -Wl,-framework,Carbon \
                 -Wl,-framework,OpenGL \
                 -Wl,-framework,Cocoa \
                 -Wl,-framework,CoreAudio \
                 -Wl,-framework,IOKit

XDarwin_CFLAGS = -DINXDARWIN
Xquartz_CFLAGS = -DINXQUARTZ -DHAS_CG_MACH_PORT -DHAS_KL_API  -DHAVE_XORG_CONFIG_H
@XQUARTZ_TRUE@macosdir = $(darwinappdir)/Contents/MacOS
@XQUARTZ_TRUE@macos_SCRIPTS = x11app
@XQUARTZ_TRUE@XDarwinApp_SOURCES = \
@XQUARTZ_TRUE@                $(top_srcdir)/fb/fbcmap_mi.c \
@XQUARTZ_TRUE@                $(top_srcdir)/mi/miinitext.c \
@XQUARTZ_TRUE@		$(top_srcdir)/Xi/stubs.c 

@XQUARTZ_TRUE@XDarwinApp_LDADD = \
@XQUARTZ_TRUE@		$(top_builddir)/dix/dixfonts.lo \
@XQUARTZ_TRUE@		$(top_builddir)/dix/libdix.la \
@XQUARTZ_TRUE@		$(top_builddir)/config/libconfig.a \
@XQUARTZ_TRUE@		$(top_builddir)/os/libos.la \
@XQUARTZ_TRUE@		./quartz/XApplication.o \
@XQUARTZ_TRUE@		./libdarwinShared.a \
@XQUARTZ_TRUE@		./quartz/libXQuartz.a \
@XQUARTZ_TRUE@		 $(top_builddir)/miext/shadow/libshadow.la \
@XQUARTZ_TRUE@		 $(top_builddir)/miext/cw/libcw.la \
@XQUARTZ_TRUE@		 $(DARWIN_LIBS) \
@XQUARTZ_TRUE@		 $(top_builddir)/miext/rootless/librootless.la \
@XQUARTZ_TRUE@		 $(top_builddir)/miext/rootless/safeAlpha/libsafeAlpha.la \
@XQUARTZ_TRUE@		 $(top_builddir)/miext/rootless/accel/librlAccel.la \
@XQUARTZ_TRUE@		 @XORG_LIBS@ \
@XQUARTZ_TRUE@		 $(XSERVER_LIBS)

@XQUARTZ_TRUE@XDarwinApp_LDFLAGS = \
@XQUARTZ_TRUE@		 -XCClinker -Objc \
@XQUARTZ_TRUE@		 -Wl,-u,_miDCInitialize \
@XQUARTZ_TRUE@		 -Wl,-framework,Carbon \
@XQUARTZ_TRUE@		 -Wl,-framework,ApplicationServices \
@XQUARTZ_TRUE@		 -Wl,-framework,Cocoa \
@XQUARTZ_TRUE@		 -Wl,-framework,CoreAudio \
@XQUARTZ_TRUE@		 -Wl,-framework,IOKit

@XQUARTZ_TRUE@XDarwinApp_CFLAGS = -DINXDARWINAPP
@XQUARTZ_TRUE@HOOK_TARGETS = xquartz-install-hook
@XQUARTZ_TRUE@crplugindir = $(darwinappdir)/Contents/Resources/cr.bundle/Contents/MacOS
@XQUARTZ_TRUE@crplugin_LTLIBRARIES = cr.la
@XQUARTZ_TRUE@cr_la_SOURCES = \
@XQUARTZ_TRUE@		quartz/cr/crAppleWM.m \
@XQUARTZ_TRUE@		quartz/cr/crFrame.m \
@XQUARTZ_TRUE@		quartz/cr/crScreen.m \
@XQUARTZ_TRUE@		quartz/fullscreen/quartzCursor.c \
@XQUARTZ_TRUE@		quartz/cr/XView.m

@XQUARTZ_TRUE@cr_la_LIBADD = \
@XQUARTZ_TRUE@		$(top_builddir)/miext/rootless/librootless.la \
@XQUARTZ_TRUE@		$(top_builddir)/miext/rootless/safeAlpha/libsafeAlpha.la \
@XQUARTZ_TRUE@		$(top_builddir)/miext/rootless/accel/librlAccel.la

@XQUARTZ_TRUE@cr_la_LDFLAGS = -shrext '' -Wl,-framework,ApplicationServices \
@XQUARTZ_TRUE@		-Wl,-framework,Cocoa \
@XQUARTZ_TRUE@		-Wl,-framework,Carbon \
@XQUARTZ_TRUE@		-XCClinker -ObjC \
@XQUARTZ_TRUE@		-XCClinker -bundle_loader -XCClinker XDarwinApp \
@XQUARTZ_TRUE@		-module -avoid-version -no-undefined

@XQUARTZ_TRUE@cr_la_DEPENDENCIES = XDarwinApp	
@XQUARTZ_TRUE@fullscreenplugindir = $(darwinappdir)/Contents/Resources/fullscreen.bundle/Contents/MacOS
@XQUARTZ_TRUE@fullscreenplugin_LTLIBRARIES = fullscreen.la
@XQUARTZ_TRUE@fullscreen_la_SOURCES = \
@XQUARTZ_TRUE@		quartz/fullscreen/fullscreen.c \
@XQUARTZ_TRUE@		quartz/fullscreen/quartzCursor.c

@XQUARTZ_TRUE@fullscreen_la_LIBADD = \
@XQUARTZ_TRUE@		$(top_builddir)/miext/shadow/libshadow.la

@XQUARTZ_TRUE@fullscreen_la_LDFLAGS = -shrext '' -Wl,-framework,ApplicationServices \
@XQUARTZ_TRUE@		-XCClinker -bundle_loader -XCClinker XDarwinApp \
@XQUARTZ_TRUE@		-module -avoid-version -no-undefined

@XQUARTZ_TRUE@fullscreen_la_DEPENDENCIES = XDarwinApp	
@GLX_TRUE@@XQUARTZ_TRUE@glxMesaplugindir = $(darwinappdir)/Contents/Resources/glxMesa.bundle/Contents/MacOS
@GLX_TRUE@@XQUARTZ_TRUE@glxMesaplugin_LTLIBRARIES = glxMesa.la
@GLX_TRUE@@XQUARTZ_TRUE@glxMesa_la_SOURCES = 
@GLX_TRUE@@XQUARTZ_TRUE@glxMesa_la_LIBADD = \
@GLX_TRUE@@XQUARTZ_TRUE@		$(top_builddir)/GL/glx/libglx.la \
@GLX_TRUE@@XQUARTZ_TRUE@		$(top_builddir)/GL/mesa/libGLcore.la 

@GLX_TRUE@@XQUARTZ_TRUE@glxMesa_la_LDFLAGS = -shrext '' \
@GLX_TRUE@@XQUARTZ_TRUE@		-Wl,-framework,AGL \
@GLX_TRUE@@XQUARTZ_TRUE@		-Wl,-framework,OpenGL \
@GLX_TRUE@@XQUARTZ_TRUE@		-XCClinker -ObjC \
@GLX_TRUE@@XQUARTZ_TRUE@		-XCClinker -bundle_loader -XCClinker XDarwinApp \
@GLX_TRUE@@XQUARTZ_TRUE@		-module -avoid-version -no-undefined

@GLX_TRUE@@XQUARTZ_TRUE@glxMesa_la_DEPENDENCIES = XDarwinApp	
@HAVE_X_PLUGIN_TRUE@xprplugindir = $(darwinappdir)/Contents/Resources/xpr.bundle/Contents/MacOS
@HAVE_X_PLUGIN_TRUE@xprplugin_LTLIBRARIES = xpr.la
@HAVE_X_PLUGIN_TRUE@xpr_la_SOURCES = \
@HAVE_X_PLUGIN_TRUE@		quartz/xpr/appledri.c \
@HAVE_X_PLUGIN_TRUE@		quartz/xpr/dri.c \
@HAVE_X_PLUGIN_TRUE@		quartz/xpr/xprAppleWM.c \
@HAVE_X_PLUGIN_TRUE@		quartz/xpr/xprCursor.c \
@HAVE_X_PLUGIN_TRUE@		quartz/xpr/xprFrame.c \
@HAVE_X_PLUGIN_TRUE@		quartz/xpr/xprScreen.c \
@HAVE_X_PLUGIN_TRUE@		quartz/xpr/x-hash.c \
@HAVE_X_PLUGIN_TRUE@		quartz/xpr/x-hook.c \
@HAVE_X_PLUGIN_TRUE@		quartz/xpr/x-list.c

@HAVE_X_PLUGIN_TRUE@xpr_la_LIBADD = \
@HAVE_X_PLUGIN_TRUE@		$(top_builddir)/miext/rootless/librootless.la \
@HAVE_X_PLUGIN_TRUE@		$(top_builddir)/miext/rootless/safeAlpha/libsafeAlpha.la \
@HAVE_X_PLUGIN_TRUE@		$(top_builddir)/miext/rootless/accel/librlAccel.la

@HAVE_X_PLUGIN_TRUE@xpr_la_LDFLAGS = -shrext '' -Wl,-framework,ApplicationServices \
@HAVE_X_PLUGIN_TRUE@		-lXplugin \
@HAVE_X_PLUGIN_TRUE@		-XCClinker -bundle_loader -XCClinker XDarwinApp \
@HAVE_X_PLUGIN_TRUE@		-module -avoid-version -no-undefined

@HAVE_X_PLUGIN_TRUE@xpr_la_DEPENDENCIES = XDarwinApp	
@HAVE_AGL_FRAMEWORK_TRUE@glxCGLplugindir = $(darwinappdir)/Contents/Resources/glxCGL.bundle/Contents/MacOS
@HAVE_AGL_FRAMEWORK_TRUE@glxCGLplugin_LTLIBRARIES = glxCGL.la
@HAVE_AGL_FRAMEWORK_TRUE@glxCGL_la_SOURCES = 
@HAVE_AGL_FRAMEWORK_TRUE@glxCGL_la_LIBADD = \
@HAVE_AGL_FRAMEWORK_TRUE@		$(top_builddir)/GL/glx/glxext.o \
@HAVE_AGL_FRAMEWORK_TRUE@		$(top_builddir)/GL/glx/libglx.a \
@HAVE_AGL_FRAMEWORK_TRUE@		$(top_builddir)/GL/apple/libAGLcore.a

@HAVE_AGL_FRAMEWORK_TRUE@glxCGL_la_LDFLAGS = -shrext '' -Wl,-framework,ApplicationServices \
@HAVE_AGL_FRAMEWORK_TRUE@		-Wl,-framework,AGL \
@HAVE_AGL_FRAMEWORK_TRUE@		-Wl,-framework,OpenGL \
@HAVE_AGL_FRAMEWORK_TRUE@		-XCClinker -ObjC \
@HAVE_AGL_FRAMEWORK_TRUE@		-XCClinker -bundle_loader -XCClinker XDarwinApp \
@HAVE_AGL_FRAMEWORK_TRUE@		-module -avoid-version -no-undefined

@HAVE_AGL_FRAMEWORK_TRUE@glxCGL_la_DEPENDENCIES = XDarwinApp	
@HAVE_AGL_FRAMEWORK_TRUE@glxAGLplugindir = $(darwinappdir)/Contents/Resources/glxAGL.bundle/Contents/MacOS
@HAVE_AGL_FRAMEWORK_TRUE@glxAGLplugin_LTLIBRARIES = glxAGL.la
@HAVE_AGL_FRAMEWORK_TRUE@glxAGL_la_SOURCES = 
@HAVE_AGL_FRAMEWORK_TRUE@glxAGL_la_LIBADD = \
@HAVE_AGL_FRAMEWORK_TRUE@		$(top_builddir)/GL/glx/glxext.o \
@HAVE_AGL_FRAMEWORK_TRUE@		$(top_builddir)/GL/glx/libglx.a \
@HAVE_AGL_FRAMEWORK_TRUE@		$(top_builddir)/GL/apple/libAGLcore.a

@HAVE_AGL_FRAMEWORK_TRUE@glxAGL_la_LDFLAGS = -shrext '' \
@HAVE_AGL_FRAMEWORK_TRUE@		-Wl,-framework,AGL \
@HAVE_AGL_FRAMEWORK_TRUE@		-Wl,-framework,OpenGL \
@HAVE_AGL_FRAMEWORK_TRUE@		-XCClinker -ObjC \
@HAVE_AGL_FRAMEWORK_TRUE@		-XCClinker -bundle_loader -XCClinker XDarwinApp \
@HAVE_AGL_FRAMEWORK_TRUE@		-module -avoid-version -no-undefined

@HAVE_AGL_FRAMEWORK_TRUE@glxAGL_la_DEPENDENCIES = XDarwinApp	
man1_MANS = XDarwin.man
EXTRA_DIST = \
	darwin.c \
	darwinClut8.h \
	darwinEvents.c \
	darwin.h \
	darwinKeyboard.c \
	darwinKeyboard.h \
	darwinXinput.c \
	XDarwin.man

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .m .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  hw/darwin/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  hw/darwin/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libdarwinShared.a: $(libdarwinShared_a_OBJECTS) $(libdarwinShared_a_DEPENDENCIES) 
	-rm -f libdarwinShared.a
	$(libdarwinShared_a_AR) libdarwinShared.a $(libdarwinShared_a_OBJECTS) $(libdarwinShared_a_LIBADD)
	$(RANLIB) libdarwinShared.a
install-crpluginLTLIBRARIES: $(crplugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(crplugindir)" || $(mkdir_p) "$(DESTDIR)$(crplugindir)"
	@list='$(crplugin_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(crpluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(crplugindir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(crpluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(crplugindir)/$$f"; \
	  else :; fi; \
	done

uninstall-crpluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(crplugin_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(crplugindir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(crplugindir)/$$p"; \
	done

clean-crpluginLTLIBRARIES:
	-test -z "$(crplugin_LTLIBRARIES)" || rm -f $(crplugin_LTLIBRARIES)
	@list='$(crplugin_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-fullscreenpluginLTLIBRARIES: $(fullscreenplugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(fullscreenplugindir)" || $(mkdir_p) "$(DESTDIR)$(fullscreenplugindir)"
	@list='$(fullscreenplugin_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(fullscreenpluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(fullscreenplugindir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(fullscreenpluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(fullscreenplugindir)/$$f"; \
	  else :; fi; \
	done

uninstall-fullscreenpluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(fullscreenplugin_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(fullscreenplugindir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(fullscreenplugindir)/$$p"; \
	done

clean-fullscreenpluginLTLIBRARIES:
	-test -z "$(fullscreenplugin_LTLIBRARIES)" || rm -f $(fullscreenplugin_LTLIBRARIES)
	@list='$(fullscreenplugin_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-glxAGLpluginLTLIBRARIES: $(glxAGLplugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(glxAGLplugindir)" || $(mkdir_p) "$(DESTDIR)$(glxAGLplugindir)"
	@list='$(glxAGLplugin_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(glxAGLpluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(glxAGLplugindir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(glxAGLpluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(glxAGLplugindir)/$$f"; \
	  else :; fi; \
	done

uninstall-glxAGLpluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(glxAGLplugin_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(glxAGLplugindir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(glxAGLplugindir)/$$p"; \
	done

clean-glxAGLpluginLTLIBRARIES:
	-test -z "$(glxAGLplugin_LTLIBRARIES)" || rm -f $(glxAGLplugin_LTLIBRARIES)
	@list='$(glxAGLplugin_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-glxCGLpluginLTLIBRARIES: $(glxCGLplugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(glxCGLplugindir)" || $(mkdir_p) "$(DESTDIR)$(glxCGLplugindir)"
	@list='$(glxCGLplugin_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(glxCGLpluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(glxCGLplugindir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(glxCGLpluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(glxCGLplugindir)/$$f"; \
	  else :; fi; \
	done

uninstall-glxCGLpluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(glxCGLplugin_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(glxCGLplugindir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(glxCGLplugindir)/$$p"; \
	done

clean-glxCGLpluginLTLIBRARIES:
	-test -z "$(glxCGLplugin_LTLIBRARIES)" || rm -f $(glxCGLplugin_LTLIBRARIES)
	@list='$(glxCGLplugin_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-glxMesapluginLTLIBRARIES: $(glxMesaplugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(glxMesaplugindir)" || $(mkdir_p) "$(DESTDIR)$(glxMesaplugindir)"
	@list='$(glxMesaplugin_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(glxMesapluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(glxMesaplugindir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(glxMesapluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(glxMesaplugindir)/$$f"; \
	  else :; fi; \
	done

uninstall-glxMesapluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(glxMesaplugin_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(glxMesaplugindir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(glxMesaplugindir)/$$p"; \
	done

clean-glxMesapluginLTLIBRARIES:
	-test -z "$(glxMesaplugin_LTLIBRARIES)" || rm -f $(glxMesaplugin_LTLIBRARIES)
	@list='$(glxMesaplugin_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
install-xprpluginLTLIBRARIES: $(xprplugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(xprplugindir)" || $(mkdir_p) "$(DESTDIR)$(xprplugindir)"
	@list='$(xprplugin_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(xprpluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(xprplugindir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(xprpluginLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(xprplugindir)/$$f"; \
	  else :; fi; \
	done

uninstall-xprpluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(xprplugin_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(xprplugindir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(xprplugindir)/$$p"; \
	done

clean-xprpluginLTLIBRARIES:
	-test -z "$(xprplugin_LTLIBRARIES)" || rm -f $(xprplugin_LTLIBRARIES)
	@list='$(xprplugin_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
cr.la: $(cr_la_OBJECTS) $(cr_la_DEPENDENCIES) 
	$(OBJCLINK) $(am_cr_la_rpath) $(cr_la_LDFLAGS) $(cr_la_OBJECTS) $(cr_la_LIBADD) $(LIBS)
fullscreen.la: $(fullscreen_la_OBJECTS) $(fullscreen_la_DEPENDENCIES) 
	$(LINK) $(am_fullscreen_la_rpath) $(fullscreen_la_LDFLAGS) $(fullscreen_la_OBJECTS) $(fullscreen_la_LIBADD) $(LIBS)
glxAGL.la: $(glxAGL_la_OBJECTS) $(glxAGL_la_DEPENDENCIES) 
	$(LINK) $(am_glxAGL_la_rpath) $(glxAGL_la_LDFLAGS) $(glxAGL_la_OBJECTS) $(glxAGL_la_LIBADD) $(LIBS)
glxCGL.la: $(glxCGL_la_OBJECTS) $(glxCGL_la_DEPENDENCIES) 
	$(LINK) $(am_glxCGL_la_rpath) $(glxCGL_la_LDFLAGS) $(glxCGL_la_OBJECTS) $(glxCGL_la_LIBADD) $(LIBS)
glxMesa.la: $(glxMesa_la_OBJECTS) $(glxMesa_la_DEPENDENCIES) 
	$(LINK) $(am_glxMesa_la_rpath) $(glxMesa_la_LDFLAGS) $(glxMesa_la_OBJECTS) $(glxMesa_la_LIBADD) $(LIBS)
xpr.la: $(xpr_la_OBJECTS) $(xpr_la_DEPENDENCIES) 
	$(LINK) $(am_xpr_la_rpath) $(xpr_la_LDFLAGS) $(xpr_la_OBJECTS) $(xpr_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
install-macosPROGRAMS: $(macos_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(macosdir)" || $(mkdir_p) "$(DESTDIR)$(macosdir)"
	@list='$(macos_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(macosPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(macosdir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(macosPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(macosdir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-macosPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(macos_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(macosdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(macosdir)/$$f"; \
	done

clean-macosPROGRAMS:
	@list='$(macos_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
XDarwin$(EXEEXT): $(XDarwin_OBJECTS) $(XDarwin_DEPENDENCIES) 
	@rm -f XDarwin$(EXEEXT)
	$(LINK) $(XDarwin_LDFLAGS) $(XDarwin_OBJECTS) $(XDarwin_LDADD) $(LIBS)
XDarwinApp$(EXEEXT): $(XDarwinApp_OBJECTS) $(XDarwinApp_DEPENDENCIES) 
	@rm -f XDarwinApp$(EXEEXT)
	$(LINK) $(XDarwinApp_LDFLAGS) $(XDarwinApp_OBJECTS) $(XDarwinApp_LDADD) $(LIBS)
Xquartz$(EXEEXT): $(Xquartz_OBJECTS) $(Xquartz_DEPENDENCIES) 
	@rm -f Xquartz$(EXEEXT)
	$(OBJCLINK) $(Xquartz_LDFLAGS) $(Xquartz_OBJECTS) $(Xquartz_LDADD) $(LIBS)
install-macosSCRIPTS: $(macos_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(macosdir)" || $(mkdir_p) "$(DESTDIR)$(macosdir)"
	@list='$(macos_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(macosSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(macosdir)/$$f'"; \
	    $(macosSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(macosdir)/$$f"; \
	  else :; fi; \
	done

uninstall-macosSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(macos_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(macosdir)/$$f'"; \
	  rm -f "$(DESTDIR)$(macosdir)/$$f"; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Preferences.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/X11Application.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/X11Controller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XDarwin-fbcmap_mi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XDarwin-miinitext.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XDarwin-stubs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XDarwinApp-fbcmap_mi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XDarwinApp-miinitext.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XDarwinApp-stubs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XView.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-appledri.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-applewm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-dri.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-fbcmap_mi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-keysym2ucs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-miinitext.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-pseudoramiX.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-quartz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-quartzAudio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-quartzKeyboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-quartzPasteboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-quartzStartup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-stubs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-x-hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-x-hook.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-x-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-xprAppleWM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-xprCursor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-xprFrame.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Xquartz-xprScreen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/appledri.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crAppleWM.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crFrame.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crScreen.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/darwin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/darwinEvents.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/darwinKeyboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dri.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fullscreen.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quartzCocoa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/quartzCursor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/x-hash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/x-hook.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/x-list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xprAppleWM.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xprCursor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xprFrame.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xprScreen.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

quartzCursor.lo: quartz/fullscreen/quartzCursor.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT quartzCursor.lo -MD -MP -MF "$(DEPDIR)/quartzCursor.Tpo" -c -o quartzCursor.lo `test -f 'quartz/fullscreen/quartzCursor.c' || echo '$(srcdir)/'`quartz/fullscreen/quartzCursor.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/quartzCursor.Tpo" "$(DEPDIR)/quartzCursor.Plo"; else rm -f "$(DEPDIR)/quartzCursor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/fullscreen/quartzCursor.c' object='quartzCursor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o quartzCursor.lo `test -f 'quartz/fullscreen/quartzCursor.c' || echo '$(srcdir)/'`quartz/fullscreen/quartzCursor.c

fullscreen.lo: quartz/fullscreen/fullscreen.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fullscreen.lo -MD -MP -MF "$(DEPDIR)/fullscreen.Tpo" -c -o fullscreen.lo `test -f 'quartz/fullscreen/fullscreen.c' || echo '$(srcdir)/'`quartz/fullscreen/fullscreen.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/fullscreen.Tpo" "$(DEPDIR)/fullscreen.Plo"; else rm -f "$(DEPDIR)/fullscreen.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/fullscreen/fullscreen.c' object='fullscreen.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fullscreen.lo `test -f 'quartz/fullscreen/fullscreen.c' || echo '$(srcdir)/'`quartz/fullscreen/fullscreen.c

appledri.lo: quartz/xpr/appledri.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT appledri.lo -MD -MP -MF "$(DEPDIR)/appledri.Tpo" -c -o appledri.lo `test -f 'quartz/xpr/appledri.c' || echo '$(srcdir)/'`quartz/xpr/appledri.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/appledri.Tpo" "$(DEPDIR)/appledri.Plo"; else rm -f "$(DEPDIR)/appledri.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/appledri.c' object='appledri.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o appledri.lo `test -f 'quartz/xpr/appledri.c' || echo '$(srcdir)/'`quartz/xpr/appledri.c

dri.lo: quartz/xpr/dri.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dri.lo -MD -MP -MF "$(DEPDIR)/dri.Tpo" -c -o dri.lo `test -f 'quartz/xpr/dri.c' || echo '$(srcdir)/'`quartz/xpr/dri.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/dri.Tpo" "$(DEPDIR)/dri.Plo"; else rm -f "$(DEPDIR)/dri.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/dri.c' object='dri.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dri.lo `test -f 'quartz/xpr/dri.c' || echo '$(srcdir)/'`quartz/xpr/dri.c

xprAppleWM.lo: quartz/xpr/xprAppleWM.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xprAppleWM.lo -MD -MP -MF "$(DEPDIR)/xprAppleWM.Tpo" -c -o xprAppleWM.lo `test -f 'quartz/xpr/xprAppleWM.c' || echo '$(srcdir)/'`quartz/xpr/xprAppleWM.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/xprAppleWM.Tpo" "$(DEPDIR)/xprAppleWM.Plo"; else rm -f "$(DEPDIR)/xprAppleWM.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/xprAppleWM.c' object='xprAppleWM.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xprAppleWM.lo `test -f 'quartz/xpr/xprAppleWM.c' || echo '$(srcdir)/'`quartz/xpr/xprAppleWM.c

xprCursor.lo: quartz/xpr/xprCursor.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xprCursor.lo -MD -MP -MF "$(DEPDIR)/xprCursor.Tpo" -c -o xprCursor.lo `test -f 'quartz/xpr/xprCursor.c' || echo '$(srcdir)/'`quartz/xpr/xprCursor.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/xprCursor.Tpo" "$(DEPDIR)/xprCursor.Plo"; else rm -f "$(DEPDIR)/xprCursor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/xprCursor.c' object='xprCursor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xprCursor.lo `test -f 'quartz/xpr/xprCursor.c' || echo '$(srcdir)/'`quartz/xpr/xprCursor.c

xprFrame.lo: quartz/xpr/xprFrame.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xprFrame.lo -MD -MP -MF "$(DEPDIR)/xprFrame.Tpo" -c -o xprFrame.lo `test -f 'quartz/xpr/xprFrame.c' || echo '$(srcdir)/'`quartz/xpr/xprFrame.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/xprFrame.Tpo" "$(DEPDIR)/xprFrame.Plo"; else rm -f "$(DEPDIR)/xprFrame.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/xprFrame.c' object='xprFrame.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xprFrame.lo `test -f 'quartz/xpr/xprFrame.c' || echo '$(srcdir)/'`quartz/xpr/xprFrame.c

xprScreen.lo: quartz/xpr/xprScreen.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xprScreen.lo -MD -MP -MF "$(DEPDIR)/xprScreen.Tpo" -c -o xprScreen.lo `test -f 'quartz/xpr/xprScreen.c' || echo '$(srcdir)/'`quartz/xpr/xprScreen.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/xprScreen.Tpo" "$(DEPDIR)/xprScreen.Plo"; else rm -f "$(DEPDIR)/xprScreen.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/xprScreen.c' object='xprScreen.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xprScreen.lo `test -f 'quartz/xpr/xprScreen.c' || echo '$(srcdir)/'`quartz/xpr/xprScreen.c

x-hash.lo: quartz/xpr/x-hash.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT x-hash.lo -MD -MP -MF "$(DEPDIR)/x-hash.Tpo" -c -o x-hash.lo `test -f 'quartz/xpr/x-hash.c' || echo '$(srcdir)/'`quartz/xpr/x-hash.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/x-hash.Tpo" "$(DEPDIR)/x-hash.Plo"; else rm -f "$(DEPDIR)/x-hash.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/x-hash.c' object='x-hash.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o x-hash.lo `test -f 'quartz/xpr/x-hash.c' || echo '$(srcdir)/'`quartz/xpr/x-hash.c

x-hook.lo: quartz/xpr/x-hook.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT x-hook.lo -MD -MP -MF "$(DEPDIR)/x-hook.Tpo" -c -o x-hook.lo `test -f 'quartz/xpr/x-hook.c' || echo '$(srcdir)/'`quartz/xpr/x-hook.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/x-hook.Tpo" "$(DEPDIR)/x-hook.Plo"; else rm -f "$(DEPDIR)/x-hook.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/x-hook.c' object='x-hook.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o x-hook.lo `test -f 'quartz/xpr/x-hook.c' || echo '$(srcdir)/'`quartz/xpr/x-hook.c

x-list.lo: quartz/xpr/x-list.c
@am__fastdepCC_TRUE@	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT x-list.lo -MD -MP -MF "$(DEPDIR)/x-list.Tpo" -c -o x-list.lo `test -f 'quartz/xpr/x-list.c' || echo '$(srcdir)/'`quartz/xpr/x-list.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/x-list.Tpo" "$(DEPDIR)/x-list.Plo"; else rm -f "$(DEPDIR)/x-list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/x-list.c' object='x-list.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o x-list.lo `test -f 'quartz/xpr/x-list.c' || echo '$(srcdir)/'`quartz/xpr/x-list.c

XDarwin-fbcmap_mi.o: $(top_srcdir)/fb/fbcmap_mi.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwin_CFLAGS) $(CFLAGS) -MT XDarwin-fbcmap_mi.o -MD -MP -MF "$(DEPDIR)/XDarwin-fbcmap_mi.Tpo" -c -o XDarwin-fbcmap_mi.o `test -f '$(top_srcdir)/fb/fbcmap_mi.c' || echo '$(srcdir)/'`$(top_srcdir)/fb/fbcmap_mi.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/XDarwin-fbcmap_mi.Tpo" "$(DEPDIR)/XDarwin-fbcmap_mi.Po"; else rm -f "$(DEPDIR)/XDarwin-fbcmap_mi.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/fb/fbcmap_mi.c' object='XDarwin-fbcmap_mi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwin_CFLAGS) $(CFLAGS) -c -o XDarwin-fbcmap_mi.o `test -f '$(top_srcdir)/fb/fbcmap_mi.c' || echo '$(srcdir)/'`$(top_srcdir)/fb/fbcmap_mi.c

XDarwin-fbcmap_mi.obj: $(top_srcdir)/fb/fbcmap_mi.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwin_CFLAGS) $(CFLAGS) -MT XDarwin-fbcmap_mi.obj -MD -MP -MF "$(DEPDIR)/XDarwin-fbcmap_mi.Tpo" -c -o XDarwin-fbcmap_mi.obj `if test -f '$(top_srcdir)/fb/fbcmap_mi.c'; then $(CYGPATH_W) '$(top_srcdir)/fb/fbcmap_mi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/fb/fbcmap_mi.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/XDarwin-fbcmap_mi.Tpo" "$(DEPDIR)/XDarwin-fbcmap_mi.Po"; else rm -f "$(DEPDIR)/XDarwin-fbcmap_mi.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/fb/fbcmap_mi.c' object='XDarwin-fbcmap_mi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwin_CFLAGS) $(CFLAGS) -c -o XDarwin-fbcmap_mi.obj `if test -f '$(top_srcdir)/fb/fbcmap_mi.c'; then $(CYGPATH_W) '$(top_srcdir)/fb/fbcmap_mi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/fb/fbcmap_mi.c'; fi`

XDarwin-miinitext.o: $(top_srcdir)/mi/miinitext.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwin_CFLAGS) $(CFLAGS) -MT XDarwin-miinitext.o -MD -MP -MF "$(DEPDIR)/XDarwin-miinitext.Tpo" -c -o XDarwin-miinitext.o `test -f '$(top_srcdir)/mi/miinitext.c' || echo '$(srcdir)/'`$(top_srcdir)/mi/miinitext.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/XDarwin-miinitext.Tpo" "$(DEPDIR)/XDarwin-miinitext.Po"; else rm -f "$(DEPDIR)/XDarwin-miinitext.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/mi/miinitext.c' object='XDarwin-miinitext.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwin_CFLAGS) $(CFLAGS) -c -o XDarwin-miinitext.o `test -f '$(top_srcdir)/mi/miinitext.c' || echo '$(srcdir)/'`$(top_srcdir)/mi/miinitext.c

XDarwin-miinitext.obj: $(top_srcdir)/mi/miinitext.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwin_CFLAGS) $(CFLAGS) -MT XDarwin-miinitext.obj -MD -MP -MF "$(DEPDIR)/XDarwin-miinitext.Tpo" -c -o XDarwin-miinitext.obj `if test -f '$(top_srcdir)/mi/miinitext.c'; then $(CYGPATH_W) '$(top_srcdir)/mi/miinitext.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/mi/miinitext.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/XDarwin-miinitext.Tpo" "$(DEPDIR)/XDarwin-miinitext.Po"; else rm -f "$(DEPDIR)/XDarwin-miinitext.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/mi/miinitext.c' object='XDarwin-miinitext.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwin_CFLAGS) $(CFLAGS) -c -o XDarwin-miinitext.obj `if test -f '$(top_srcdir)/mi/miinitext.c'; then $(CYGPATH_W) '$(top_srcdir)/mi/miinitext.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/mi/miinitext.c'; fi`

XDarwin-stubs.o: $(top_srcdir)/Xi/stubs.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwin_CFLAGS) $(CFLAGS) -MT XDarwin-stubs.o -MD -MP -MF "$(DEPDIR)/XDarwin-stubs.Tpo" -c -o XDarwin-stubs.o `test -f '$(top_srcdir)/Xi/stubs.c' || echo '$(srcdir)/'`$(top_srcdir)/Xi/stubs.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/XDarwin-stubs.Tpo" "$(DEPDIR)/XDarwin-stubs.Po"; else rm -f "$(DEPDIR)/XDarwin-stubs.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/Xi/stubs.c' object='XDarwin-stubs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwin_CFLAGS) $(CFLAGS) -c -o XDarwin-stubs.o `test -f '$(top_srcdir)/Xi/stubs.c' || echo '$(srcdir)/'`$(top_srcdir)/Xi/stubs.c

XDarwin-stubs.obj: $(top_srcdir)/Xi/stubs.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwin_CFLAGS) $(CFLAGS) -MT XDarwin-stubs.obj -MD -MP -MF "$(DEPDIR)/XDarwin-stubs.Tpo" -c -o XDarwin-stubs.obj `if test -f '$(top_srcdir)/Xi/stubs.c'; then $(CYGPATH_W) '$(top_srcdir)/Xi/stubs.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/Xi/stubs.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/XDarwin-stubs.Tpo" "$(DEPDIR)/XDarwin-stubs.Po"; else rm -f "$(DEPDIR)/XDarwin-stubs.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/Xi/stubs.c' object='XDarwin-stubs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwin_CFLAGS) $(CFLAGS) -c -o XDarwin-stubs.obj `if test -f '$(top_srcdir)/Xi/stubs.c'; then $(CYGPATH_W) '$(top_srcdir)/Xi/stubs.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/Xi/stubs.c'; fi`

XDarwinApp-fbcmap_mi.o: $(top_srcdir)/fb/fbcmap_mi.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwinApp_CFLAGS) $(CFLAGS) -MT XDarwinApp-fbcmap_mi.o -MD -MP -MF "$(DEPDIR)/XDarwinApp-fbcmap_mi.Tpo" -c -o XDarwinApp-fbcmap_mi.o `test -f '$(top_srcdir)/fb/fbcmap_mi.c' || echo '$(srcdir)/'`$(top_srcdir)/fb/fbcmap_mi.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/XDarwinApp-fbcmap_mi.Tpo" "$(DEPDIR)/XDarwinApp-fbcmap_mi.Po"; else rm -f "$(DEPDIR)/XDarwinApp-fbcmap_mi.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/fb/fbcmap_mi.c' object='XDarwinApp-fbcmap_mi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwinApp_CFLAGS) $(CFLAGS) -c -o XDarwinApp-fbcmap_mi.o `test -f '$(top_srcdir)/fb/fbcmap_mi.c' || echo '$(srcdir)/'`$(top_srcdir)/fb/fbcmap_mi.c

XDarwinApp-fbcmap_mi.obj: $(top_srcdir)/fb/fbcmap_mi.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwinApp_CFLAGS) $(CFLAGS) -MT XDarwinApp-fbcmap_mi.obj -MD -MP -MF "$(DEPDIR)/XDarwinApp-fbcmap_mi.Tpo" -c -o XDarwinApp-fbcmap_mi.obj `if test -f '$(top_srcdir)/fb/fbcmap_mi.c'; then $(CYGPATH_W) '$(top_srcdir)/fb/fbcmap_mi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/fb/fbcmap_mi.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/XDarwinApp-fbcmap_mi.Tpo" "$(DEPDIR)/XDarwinApp-fbcmap_mi.Po"; else rm -f "$(DEPDIR)/XDarwinApp-fbcmap_mi.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/fb/fbcmap_mi.c' object='XDarwinApp-fbcmap_mi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwinApp_CFLAGS) $(CFLAGS) -c -o XDarwinApp-fbcmap_mi.obj `if test -f '$(top_srcdir)/fb/fbcmap_mi.c'; then $(CYGPATH_W) '$(top_srcdir)/fb/fbcmap_mi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/fb/fbcmap_mi.c'; fi`

XDarwinApp-miinitext.o: $(top_srcdir)/mi/miinitext.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwinApp_CFLAGS) $(CFLAGS) -MT XDarwinApp-miinitext.o -MD -MP -MF "$(DEPDIR)/XDarwinApp-miinitext.Tpo" -c -o XDarwinApp-miinitext.o `test -f '$(top_srcdir)/mi/miinitext.c' || echo '$(srcdir)/'`$(top_srcdir)/mi/miinitext.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/XDarwinApp-miinitext.Tpo" "$(DEPDIR)/XDarwinApp-miinitext.Po"; else rm -f "$(DEPDIR)/XDarwinApp-miinitext.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/mi/miinitext.c' object='XDarwinApp-miinitext.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwinApp_CFLAGS) $(CFLAGS) -c -o XDarwinApp-miinitext.o `test -f '$(top_srcdir)/mi/miinitext.c' || echo '$(srcdir)/'`$(top_srcdir)/mi/miinitext.c

XDarwinApp-miinitext.obj: $(top_srcdir)/mi/miinitext.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwinApp_CFLAGS) $(CFLAGS) -MT XDarwinApp-miinitext.obj -MD -MP -MF "$(DEPDIR)/XDarwinApp-miinitext.Tpo" -c -o XDarwinApp-miinitext.obj `if test -f '$(top_srcdir)/mi/miinitext.c'; then $(CYGPATH_W) '$(top_srcdir)/mi/miinitext.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/mi/miinitext.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/XDarwinApp-miinitext.Tpo" "$(DEPDIR)/XDarwinApp-miinitext.Po"; else rm -f "$(DEPDIR)/XDarwinApp-miinitext.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/mi/miinitext.c' object='XDarwinApp-miinitext.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwinApp_CFLAGS) $(CFLAGS) -c -o XDarwinApp-miinitext.obj `if test -f '$(top_srcdir)/mi/miinitext.c'; then $(CYGPATH_W) '$(top_srcdir)/mi/miinitext.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/mi/miinitext.c'; fi`

XDarwinApp-stubs.o: $(top_srcdir)/Xi/stubs.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwinApp_CFLAGS) $(CFLAGS) -MT XDarwinApp-stubs.o -MD -MP -MF "$(DEPDIR)/XDarwinApp-stubs.Tpo" -c -o XDarwinApp-stubs.o `test -f '$(top_srcdir)/Xi/stubs.c' || echo '$(srcdir)/'`$(top_srcdir)/Xi/stubs.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/XDarwinApp-stubs.Tpo" "$(DEPDIR)/XDarwinApp-stubs.Po"; else rm -f "$(DEPDIR)/XDarwinApp-stubs.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/Xi/stubs.c' object='XDarwinApp-stubs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwinApp_CFLAGS) $(CFLAGS) -c -o XDarwinApp-stubs.o `test -f '$(top_srcdir)/Xi/stubs.c' || echo '$(srcdir)/'`$(top_srcdir)/Xi/stubs.c

XDarwinApp-stubs.obj: $(top_srcdir)/Xi/stubs.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwinApp_CFLAGS) $(CFLAGS) -MT XDarwinApp-stubs.obj -MD -MP -MF "$(DEPDIR)/XDarwinApp-stubs.Tpo" -c -o XDarwinApp-stubs.obj `if test -f '$(top_srcdir)/Xi/stubs.c'; then $(CYGPATH_W) '$(top_srcdir)/Xi/stubs.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/Xi/stubs.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/XDarwinApp-stubs.Tpo" "$(DEPDIR)/XDarwinApp-stubs.Po"; else rm -f "$(DEPDIR)/XDarwinApp-stubs.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/Xi/stubs.c' object='XDarwinApp-stubs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(XDarwinApp_CFLAGS) $(CFLAGS) -c -o XDarwinApp-stubs.obj `if test -f '$(top_srcdir)/Xi/stubs.c'; then $(CYGPATH_W) '$(top_srcdir)/Xi/stubs.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/Xi/stubs.c'; fi`

Xquartz-fbcmap_mi.o: $(top_srcdir)/fb/fbcmap_mi.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-fbcmap_mi.o -MD -MP -MF "$(DEPDIR)/Xquartz-fbcmap_mi.Tpo" -c -o Xquartz-fbcmap_mi.o `test -f '$(top_srcdir)/fb/fbcmap_mi.c' || echo '$(srcdir)/'`$(top_srcdir)/fb/fbcmap_mi.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-fbcmap_mi.Tpo" "$(DEPDIR)/Xquartz-fbcmap_mi.Po"; else rm -f "$(DEPDIR)/Xquartz-fbcmap_mi.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/fb/fbcmap_mi.c' object='Xquartz-fbcmap_mi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-fbcmap_mi.o `test -f '$(top_srcdir)/fb/fbcmap_mi.c' || echo '$(srcdir)/'`$(top_srcdir)/fb/fbcmap_mi.c

Xquartz-fbcmap_mi.obj: $(top_srcdir)/fb/fbcmap_mi.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-fbcmap_mi.obj -MD -MP -MF "$(DEPDIR)/Xquartz-fbcmap_mi.Tpo" -c -o Xquartz-fbcmap_mi.obj `if test -f '$(top_srcdir)/fb/fbcmap_mi.c'; then $(CYGPATH_W) '$(top_srcdir)/fb/fbcmap_mi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/fb/fbcmap_mi.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-fbcmap_mi.Tpo" "$(DEPDIR)/Xquartz-fbcmap_mi.Po"; else rm -f "$(DEPDIR)/Xquartz-fbcmap_mi.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/fb/fbcmap_mi.c' object='Xquartz-fbcmap_mi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-fbcmap_mi.obj `if test -f '$(top_srcdir)/fb/fbcmap_mi.c'; then $(CYGPATH_W) '$(top_srcdir)/fb/fbcmap_mi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/fb/fbcmap_mi.c'; fi`

Xquartz-miinitext.o: $(top_srcdir)/mi/miinitext.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-miinitext.o -MD -MP -MF "$(DEPDIR)/Xquartz-miinitext.Tpo" -c -o Xquartz-miinitext.o `test -f '$(top_srcdir)/mi/miinitext.c' || echo '$(srcdir)/'`$(top_srcdir)/mi/miinitext.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-miinitext.Tpo" "$(DEPDIR)/Xquartz-miinitext.Po"; else rm -f "$(DEPDIR)/Xquartz-miinitext.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/mi/miinitext.c' object='Xquartz-miinitext.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-miinitext.o `test -f '$(top_srcdir)/mi/miinitext.c' || echo '$(srcdir)/'`$(top_srcdir)/mi/miinitext.c

Xquartz-miinitext.obj: $(top_srcdir)/mi/miinitext.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-miinitext.obj -MD -MP -MF "$(DEPDIR)/Xquartz-miinitext.Tpo" -c -o Xquartz-miinitext.obj `if test -f '$(top_srcdir)/mi/miinitext.c'; then $(CYGPATH_W) '$(top_srcdir)/mi/miinitext.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/mi/miinitext.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-miinitext.Tpo" "$(DEPDIR)/Xquartz-miinitext.Po"; else rm -f "$(DEPDIR)/Xquartz-miinitext.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/mi/miinitext.c' object='Xquartz-miinitext.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-miinitext.obj `if test -f '$(top_srcdir)/mi/miinitext.c'; then $(CYGPATH_W) '$(top_srcdir)/mi/miinitext.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/mi/miinitext.c'; fi`

Xquartz-stubs.o: $(top_srcdir)/Xi/stubs.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-stubs.o -MD -MP -MF "$(DEPDIR)/Xquartz-stubs.Tpo" -c -o Xquartz-stubs.o `test -f '$(top_srcdir)/Xi/stubs.c' || echo '$(srcdir)/'`$(top_srcdir)/Xi/stubs.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-stubs.Tpo" "$(DEPDIR)/Xquartz-stubs.Po"; else rm -f "$(DEPDIR)/Xquartz-stubs.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/Xi/stubs.c' object='Xquartz-stubs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-stubs.o `test -f '$(top_srcdir)/Xi/stubs.c' || echo '$(srcdir)/'`$(top_srcdir)/Xi/stubs.c

Xquartz-stubs.obj: $(top_srcdir)/Xi/stubs.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-stubs.obj -MD -MP -MF "$(DEPDIR)/Xquartz-stubs.Tpo" -c -o Xquartz-stubs.obj `if test -f '$(top_srcdir)/Xi/stubs.c'; then $(CYGPATH_W) '$(top_srcdir)/Xi/stubs.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/Xi/stubs.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-stubs.Tpo" "$(DEPDIR)/Xquartz-stubs.Po"; else rm -f "$(DEPDIR)/Xquartz-stubs.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$(top_srcdir)/Xi/stubs.c' object='Xquartz-stubs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-stubs.obj `if test -f '$(top_srcdir)/Xi/stubs.c'; then $(CYGPATH_W) '$(top_srcdir)/Xi/stubs.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/Xi/stubs.c'; fi`

Xquartz-applewm.o: quartz/applewm.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-applewm.o -MD -MP -MF "$(DEPDIR)/Xquartz-applewm.Tpo" -c -o Xquartz-applewm.o `test -f 'quartz/applewm.c' || echo '$(srcdir)/'`quartz/applewm.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-applewm.Tpo" "$(DEPDIR)/Xquartz-applewm.Po"; else rm -f "$(DEPDIR)/Xquartz-applewm.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/applewm.c' object='Xquartz-applewm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-applewm.o `test -f 'quartz/applewm.c' || echo '$(srcdir)/'`quartz/applewm.c

Xquartz-applewm.obj: quartz/applewm.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-applewm.obj -MD -MP -MF "$(DEPDIR)/Xquartz-applewm.Tpo" -c -o Xquartz-applewm.obj `if test -f 'quartz/applewm.c'; then $(CYGPATH_W) 'quartz/applewm.c'; else $(CYGPATH_W) '$(srcdir)/quartz/applewm.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-applewm.Tpo" "$(DEPDIR)/Xquartz-applewm.Po"; else rm -f "$(DEPDIR)/Xquartz-applewm.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/applewm.c' object='Xquartz-applewm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-applewm.obj `if test -f 'quartz/applewm.c'; then $(CYGPATH_W) 'quartz/applewm.c'; else $(CYGPATH_W) '$(srcdir)/quartz/applewm.c'; fi`

Xquartz-keysym2ucs.o: quartz/keysym2ucs.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-keysym2ucs.o -MD -MP -MF "$(DEPDIR)/Xquartz-keysym2ucs.Tpo" -c -o Xquartz-keysym2ucs.o `test -f 'quartz/keysym2ucs.c' || echo '$(srcdir)/'`quartz/keysym2ucs.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-keysym2ucs.Tpo" "$(DEPDIR)/Xquartz-keysym2ucs.Po"; else rm -f "$(DEPDIR)/Xquartz-keysym2ucs.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/keysym2ucs.c' object='Xquartz-keysym2ucs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-keysym2ucs.o `test -f 'quartz/keysym2ucs.c' || echo '$(srcdir)/'`quartz/keysym2ucs.c

Xquartz-keysym2ucs.obj: quartz/keysym2ucs.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-keysym2ucs.obj -MD -MP -MF "$(DEPDIR)/Xquartz-keysym2ucs.Tpo" -c -o Xquartz-keysym2ucs.obj `if test -f 'quartz/keysym2ucs.c'; then $(CYGPATH_W) 'quartz/keysym2ucs.c'; else $(CYGPATH_W) '$(srcdir)/quartz/keysym2ucs.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-keysym2ucs.Tpo" "$(DEPDIR)/Xquartz-keysym2ucs.Po"; else rm -f "$(DEPDIR)/Xquartz-keysym2ucs.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/keysym2ucs.c' object='Xquartz-keysym2ucs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-keysym2ucs.obj `if test -f 'quartz/keysym2ucs.c'; then $(CYGPATH_W) 'quartz/keysym2ucs.c'; else $(CYGPATH_W) '$(srcdir)/quartz/keysym2ucs.c'; fi`

Xquartz-pseudoramiX.o: quartz/pseudoramiX.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-pseudoramiX.o -MD -MP -MF "$(DEPDIR)/Xquartz-pseudoramiX.Tpo" -c -o Xquartz-pseudoramiX.o `test -f 'quartz/pseudoramiX.c' || echo '$(srcdir)/'`quartz/pseudoramiX.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-pseudoramiX.Tpo" "$(DEPDIR)/Xquartz-pseudoramiX.Po"; else rm -f "$(DEPDIR)/Xquartz-pseudoramiX.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/pseudoramiX.c' object='Xquartz-pseudoramiX.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-pseudoramiX.o `test -f 'quartz/pseudoramiX.c' || echo '$(srcdir)/'`quartz/pseudoramiX.c

Xquartz-pseudoramiX.obj: quartz/pseudoramiX.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-pseudoramiX.obj -MD -MP -MF "$(DEPDIR)/Xquartz-pseudoramiX.Tpo" -c -o Xquartz-pseudoramiX.obj `if test -f 'quartz/pseudoramiX.c'; then $(CYGPATH_W) 'quartz/pseudoramiX.c'; else $(CYGPATH_W) '$(srcdir)/quartz/pseudoramiX.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-pseudoramiX.Tpo" "$(DEPDIR)/Xquartz-pseudoramiX.Po"; else rm -f "$(DEPDIR)/Xquartz-pseudoramiX.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/pseudoramiX.c' object='Xquartz-pseudoramiX.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-pseudoramiX.obj `if test -f 'quartz/pseudoramiX.c'; then $(CYGPATH_W) 'quartz/pseudoramiX.c'; else $(CYGPATH_W) '$(srcdir)/quartz/pseudoramiX.c'; fi`

Xquartz-quartz.o: quartz/quartz.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-quartz.o -MD -MP -MF "$(DEPDIR)/Xquartz-quartz.Tpo" -c -o Xquartz-quartz.o `test -f 'quartz/quartz.c' || echo '$(srcdir)/'`quartz/quartz.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-quartz.Tpo" "$(DEPDIR)/Xquartz-quartz.Po"; else rm -f "$(DEPDIR)/Xquartz-quartz.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/quartz.c' object='Xquartz-quartz.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-quartz.o `test -f 'quartz/quartz.c' || echo '$(srcdir)/'`quartz/quartz.c

Xquartz-quartz.obj: quartz/quartz.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-quartz.obj -MD -MP -MF "$(DEPDIR)/Xquartz-quartz.Tpo" -c -o Xquartz-quartz.obj `if test -f 'quartz/quartz.c'; then $(CYGPATH_W) 'quartz/quartz.c'; else $(CYGPATH_W) '$(srcdir)/quartz/quartz.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-quartz.Tpo" "$(DEPDIR)/Xquartz-quartz.Po"; else rm -f "$(DEPDIR)/Xquartz-quartz.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/quartz.c' object='Xquartz-quartz.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-quartz.obj `if test -f 'quartz/quartz.c'; then $(CYGPATH_W) 'quartz/quartz.c'; else $(CYGPATH_W) '$(srcdir)/quartz/quartz.c'; fi`

Xquartz-quartzAudio.o: quartz/quartzAudio.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-quartzAudio.o -MD -MP -MF "$(DEPDIR)/Xquartz-quartzAudio.Tpo" -c -o Xquartz-quartzAudio.o `test -f 'quartz/quartzAudio.c' || echo '$(srcdir)/'`quartz/quartzAudio.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-quartzAudio.Tpo" "$(DEPDIR)/Xquartz-quartzAudio.Po"; else rm -f "$(DEPDIR)/Xquartz-quartzAudio.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/quartzAudio.c' object='Xquartz-quartzAudio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-quartzAudio.o `test -f 'quartz/quartzAudio.c' || echo '$(srcdir)/'`quartz/quartzAudio.c

Xquartz-quartzAudio.obj: quartz/quartzAudio.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-quartzAudio.obj -MD -MP -MF "$(DEPDIR)/Xquartz-quartzAudio.Tpo" -c -o Xquartz-quartzAudio.obj `if test -f 'quartz/quartzAudio.c'; then $(CYGPATH_W) 'quartz/quartzAudio.c'; else $(CYGPATH_W) '$(srcdir)/quartz/quartzAudio.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-quartzAudio.Tpo" "$(DEPDIR)/Xquartz-quartzAudio.Po"; else rm -f "$(DEPDIR)/Xquartz-quartzAudio.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/quartzAudio.c' object='Xquartz-quartzAudio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-quartzAudio.obj `if test -f 'quartz/quartzAudio.c'; then $(CYGPATH_W) 'quartz/quartzAudio.c'; else $(CYGPATH_W) '$(srcdir)/quartz/quartzAudio.c'; fi`

Xquartz-quartzKeyboard.o: quartz/quartzKeyboard.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-quartzKeyboard.o -MD -MP -MF "$(DEPDIR)/Xquartz-quartzKeyboard.Tpo" -c -o Xquartz-quartzKeyboard.o `test -f 'quartz/quartzKeyboard.c' || echo '$(srcdir)/'`quartz/quartzKeyboard.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-quartzKeyboard.Tpo" "$(DEPDIR)/Xquartz-quartzKeyboard.Po"; else rm -f "$(DEPDIR)/Xquartz-quartzKeyboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/quartzKeyboard.c' object='Xquartz-quartzKeyboard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-quartzKeyboard.o `test -f 'quartz/quartzKeyboard.c' || echo '$(srcdir)/'`quartz/quartzKeyboard.c

Xquartz-quartzKeyboard.obj: quartz/quartzKeyboard.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-quartzKeyboard.obj -MD -MP -MF "$(DEPDIR)/Xquartz-quartzKeyboard.Tpo" -c -o Xquartz-quartzKeyboard.obj `if test -f 'quartz/quartzKeyboard.c'; then $(CYGPATH_W) 'quartz/quartzKeyboard.c'; else $(CYGPATH_W) '$(srcdir)/quartz/quartzKeyboard.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-quartzKeyboard.Tpo" "$(DEPDIR)/Xquartz-quartzKeyboard.Po"; else rm -f "$(DEPDIR)/Xquartz-quartzKeyboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/quartzKeyboard.c' object='Xquartz-quartzKeyboard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-quartzKeyboard.obj `if test -f 'quartz/quartzKeyboard.c'; then $(CYGPATH_W) 'quartz/quartzKeyboard.c'; else $(CYGPATH_W) '$(srcdir)/quartz/quartzKeyboard.c'; fi`

Xquartz-quartzPasteboard.o: quartz/quartzPasteboard.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-quartzPasteboard.o -MD -MP -MF "$(DEPDIR)/Xquartz-quartzPasteboard.Tpo" -c -o Xquartz-quartzPasteboard.o `test -f 'quartz/quartzPasteboard.c' || echo '$(srcdir)/'`quartz/quartzPasteboard.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-quartzPasteboard.Tpo" "$(DEPDIR)/Xquartz-quartzPasteboard.Po"; else rm -f "$(DEPDIR)/Xquartz-quartzPasteboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/quartzPasteboard.c' object='Xquartz-quartzPasteboard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-quartzPasteboard.o `test -f 'quartz/quartzPasteboard.c' || echo '$(srcdir)/'`quartz/quartzPasteboard.c

Xquartz-quartzPasteboard.obj: quartz/quartzPasteboard.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-quartzPasteboard.obj -MD -MP -MF "$(DEPDIR)/Xquartz-quartzPasteboard.Tpo" -c -o Xquartz-quartzPasteboard.obj `if test -f 'quartz/quartzPasteboard.c'; then $(CYGPATH_W) 'quartz/quartzPasteboard.c'; else $(CYGPATH_W) '$(srcdir)/quartz/quartzPasteboard.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-quartzPasteboard.Tpo" "$(DEPDIR)/Xquartz-quartzPasteboard.Po"; else rm -f "$(DEPDIR)/Xquartz-quartzPasteboard.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/quartzPasteboard.c' object='Xquartz-quartzPasteboard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-quartzPasteboard.obj `if test -f 'quartz/quartzPasteboard.c'; then $(CYGPATH_W) 'quartz/quartzPasteboard.c'; else $(CYGPATH_W) '$(srcdir)/quartz/quartzPasteboard.c'; fi`

Xquartz-quartzStartup.o: quartz/quartzStartup.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-quartzStartup.o -MD -MP -MF "$(DEPDIR)/Xquartz-quartzStartup.Tpo" -c -o Xquartz-quartzStartup.o `test -f 'quartz/quartzStartup.c' || echo '$(srcdir)/'`quartz/quartzStartup.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-quartzStartup.Tpo" "$(DEPDIR)/Xquartz-quartzStartup.Po"; else rm -f "$(DEPDIR)/Xquartz-quartzStartup.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/quartzStartup.c' object='Xquartz-quartzStartup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-quartzStartup.o `test -f 'quartz/quartzStartup.c' || echo '$(srcdir)/'`quartz/quartzStartup.c

Xquartz-quartzStartup.obj: quartz/quartzStartup.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-quartzStartup.obj -MD -MP -MF "$(DEPDIR)/Xquartz-quartzStartup.Tpo" -c -o Xquartz-quartzStartup.obj `if test -f 'quartz/quartzStartup.c'; then $(CYGPATH_W) 'quartz/quartzStartup.c'; else $(CYGPATH_W) '$(srcdir)/quartz/quartzStartup.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-quartzStartup.Tpo" "$(DEPDIR)/Xquartz-quartzStartup.Po"; else rm -f "$(DEPDIR)/Xquartz-quartzStartup.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/quartzStartup.c' object='Xquartz-quartzStartup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-quartzStartup.obj `if test -f 'quartz/quartzStartup.c'; then $(CYGPATH_W) 'quartz/quartzStartup.c'; else $(CYGPATH_W) '$(srcdir)/quartz/quartzStartup.c'; fi`

Xquartz-appledri.o: quartz/xpr/appledri.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-appledri.o -MD -MP -MF "$(DEPDIR)/Xquartz-appledri.Tpo" -c -o Xquartz-appledri.o `test -f 'quartz/xpr/appledri.c' || echo '$(srcdir)/'`quartz/xpr/appledri.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-appledri.Tpo" "$(DEPDIR)/Xquartz-appledri.Po"; else rm -f "$(DEPDIR)/Xquartz-appledri.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/appledri.c' object='Xquartz-appledri.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-appledri.o `test -f 'quartz/xpr/appledri.c' || echo '$(srcdir)/'`quartz/xpr/appledri.c

Xquartz-appledri.obj: quartz/xpr/appledri.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-appledri.obj -MD -MP -MF "$(DEPDIR)/Xquartz-appledri.Tpo" -c -o Xquartz-appledri.obj `if test -f 'quartz/xpr/appledri.c'; then $(CYGPATH_W) 'quartz/xpr/appledri.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/appledri.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-appledri.Tpo" "$(DEPDIR)/Xquartz-appledri.Po"; else rm -f "$(DEPDIR)/Xquartz-appledri.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/appledri.c' object='Xquartz-appledri.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-appledri.obj `if test -f 'quartz/xpr/appledri.c'; then $(CYGPATH_W) 'quartz/xpr/appledri.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/appledri.c'; fi`

Xquartz-dri.o: quartz/xpr/dri.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-dri.o -MD -MP -MF "$(DEPDIR)/Xquartz-dri.Tpo" -c -o Xquartz-dri.o `test -f 'quartz/xpr/dri.c' || echo '$(srcdir)/'`quartz/xpr/dri.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-dri.Tpo" "$(DEPDIR)/Xquartz-dri.Po"; else rm -f "$(DEPDIR)/Xquartz-dri.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/dri.c' object='Xquartz-dri.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-dri.o `test -f 'quartz/xpr/dri.c' || echo '$(srcdir)/'`quartz/xpr/dri.c

Xquartz-dri.obj: quartz/xpr/dri.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-dri.obj -MD -MP -MF "$(DEPDIR)/Xquartz-dri.Tpo" -c -o Xquartz-dri.obj `if test -f 'quartz/xpr/dri.c'; then $(CYGPATH_W) 'quartz/xpr/dri.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/dri.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-dri.Tpo" "$(DEPDIR)/Xquartz-dri.Po"; else rm -f "$(DEPDIR)/Xquartz-dri.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/dri.c' object='Xquartz-dri.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-dri.obj `if test -f 'quartz/xpr/dri.c'; then $(CYGPATH_W) 'quartz/xpr/dri.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/dri.c'; fi`

Xquartz-xprAppleWM.o: quartz/xpr/xprAppleWM.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-xprAppleWM.o -MD -MP -MF "$(DEPDIR)/Xquartz-xprAppleWM.Tpo" -c -o Xquartz-xprAppleWM.o `test -f 'quartz/xpr/xprAppleWM.c' || echo '$(srcdir)/'`quartz/xpr/xprAppleWM.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-xprAppleWM.Tpo" "$(DEPDIR)/Xquartz-xprAppleWM.Po"; else rm -f "$(DEPDIR)/Xquartz-xprAppleWM.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/xprAppleWM.c' object='Xquartz-xprAppleWM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-xprAppleWM.o `test -f 'quartz/xpr/xprAppleWM.c' || echo '$(srcdir)/'`quartz/xpr/xprAppleWM.c

Xquartz-xprAppleWM.obj: quartz/xpr/xprAppleWM.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-xprAppleWM.obj -MD -MP -MF "$(DEPDIR)/Xquartz-xprAppleWM.Tpo" -c -o Xquartz-xprAppleWM.obj `if test -f 'quartz/xpr/xprAppleWM.c'; then $(CYGPATH_W) 'quartz/xpr/xprAppleWM.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/xprAppleWM.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-xprAppleWM.Tpo" "$(DEPDIR)/Xquartz-xprAppleWM.Po"; else rm -f "$(DEPDIR)/Xquartz-xprAppleWM.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/xprAppleWM.c' object='Xquartz-xprAppleWM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-xprAppleWM.obj `if test -f 'quartz/xpr/xprAppleWM.c'; then $(CYGPATH_W) 'quartz/xpr/xprAppleWM.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/xprAppleWM.c'; fi`

Xquartz-xprCursor.o: quartz/xpr/xprCursor.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-xprCursor.o -MD -MP -MF "$(DEPDIR)/Xquartz-xprCursor.Tpo" -c -o Xquartz-xprCursor.o `test -f 'quartz/xpr/xprCursor.c' || echo '$(srcdir)/'`quartz/xpr/xprCursor.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-xprCursor.Tpo" "$(DEPDIR)/Xquartz-xprCursor.Po"; else rm -f "$(DEPDIR)/Xquartz-xprCursor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/xprCursor.c' object='Xquartz-xprCursor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-xprCursor.o `test -f 'quartz/xpr/xprCursor.c' || echo '$(srcdir)/'`quartz/xpr/xprCursor.c

Xquartz-xprCursor.obj: quartz/xpr/xprCursor.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-xprCursor.obj -MD -MP -MF "$(DEPDIR)/Xquartz-xprCursor.Tpo" -c -o Xquartz-xprCursor.obj `if test -f 'quartz/xpr/xprCursor.c'; then $(CYGPATH_W) 'quartz/xpr/xprCursor.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/xprCursor.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-xprCursor.Tpo" "$(DEPDIR)/Xquartz-xprCursor.Po"; else rm -f "$(DEPDIR)/Xquartz-xprCursor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/xprCursor.c' object='Xquartz-xprCursor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-xprCursor.obj `if test -f 'quartz/xpr/xprCursor.c'; then $(CYGPATH_W) 'quartz/xpr/xprCursor.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/xprCursor.c'; fi`

Xquartz-xprFrame.o: quartz/xpr/xprFrame.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-xprFrame.o -MD -MP -MF "$(DEPDIR)/Xquartz-xprFrame.Tpo" -c -o Xquartz-xprFrame.o `test -f 'quartz/xpr/xprFrame.c' || echo '$(srcdir)/'`quartz/xpr/xprFrame.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-xprFrame.Tpo" "$(DEPDIR)/Xquartz-xprFrame.Po"; else rm -f "$(DEPDIR)/Xquartz-xprFrame.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/xprFrame.c' object='Xquartz-xprFrame.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-xprFrame.o `test -f 'quartz/xpr/xprFrame.c' || echo '$(srcdir)/'`quartz/xpr/xprFrame.c

Xquartz-xprFrame.obj: quartz/xpr/xprFrame.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-xprFrame.obj -MD -MP -MF "$(DEPDIR)/Xquartz-xprFrame.Tpo" -c -o Xquartz-xprFrame.obj `if test -f 'quartz/xpr/xprFrame.c'; then $(CYGPATH_W) 'quartz/xpr/xprFrame.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/xprFrame.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-xprFrame.Tpo" "$(DEPDIR)/Xquartz-xprFrame.Po"; else rm -f "$(DEPDIR)/Xquartz-xprFrame.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/xprFrame.c' object='Xquartz-xprFrame.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-xprFrame.obj `if test -f 'quartz/xpr/xprFrame.c'; then $(CYGPATH_W) 'quartz/xpr/xprFrame.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/xprFrame.c'; fi`

Xquartz-xprScreen.o: quartz/xpr/xprScreen.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-xprScreen.o -MD -MP -MF "$(DEPDIR)/Xquartz-xprScreen.Tpo" -c -o Xquartz-xprScreen.o `test -f 'quartz/xpr/xprScreen.c' || echo '$(srcdir)/'`quartz/xpr/xprScreen.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-xprScreen.Tpo" "$(DEPDIR)/Xquartz-xprScreen.Po"; else rm -f "$(DEPDIR)/Xquartz-xprScreen.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/xprScreen.c' object='Xquartz-xprScreen.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-xprScreen.o `test -f 'quartz/xpr/xprScreen.c' || echo '$(srcdir)/'`quartz/xpr/xprScreen.c

Xquartz-xprScreen.obj: quartz/xpr/xprScreen.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-xprScreen.obj -MD -MP -MF "$(DEPDIR)/Xquartz-xprScreen.Tpo" -c -o Xquartz-xprScreen.obj `if test -f 'quartz/xpr/xprScreen.c'; then $(CYGPATH_W) 'quartz/xpr/xprScreen.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/xprScreen.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-xprScreen.Tpo" "$(DEPDIR)/Xquartz-xprScreen.Po"; else rm -f "$(DEPDIR)/Xquartz-xprScreen.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/xprScreen.c' object='Xquartz-xprScreen.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-xprScreen.obj `if test -f 'quartz/xpr/xprScreen.c'; then $(CYGPATH_W) 'quartz/xpr/xprScreen.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/xprScreen.c'; fi`

Xquartz-x-hash.o: quartz/xpr/x-hash.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-x-hash.o -MD -MP -MF "$(DEPDIR)/Xquartz-x-hash.Tpo" -c -o Xquartz-x-hash.o `test -f 'quartz/xpr/x-hash.c' || echo '$(srcdir)/'`quartz/xpr/x-hash.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-x-hash.Tpo" "$(DEPDIR)/Xquartz-x-hash.Po"; else rm -f "$(DEPDIR)/Xquartz-x-hash.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/x-hash.c' object='Xquartz-x-hash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-x-hash.o `test -f 'quartz/xpr/x-hash.c' || echo '$(srcdir)/'`quartz/xpr/x-hash.c

Xquartz-x-hash.obj: quartz/xpr/x-hash.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-x-hash.obj -MD -MP -MF "$(DEPDIR)/Xquartz-x-hash.Tpo" -c -o Xquartz-x-hash.obj `if test -f 'quartz/xpr/x-hash.c'; then $(CYGPATH_W) 'quartz/xpr/x-hash.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/x-hash.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-x-hash.Tpo" "$(DEPDIR)/Xquartz-x-hash.Po"; else rm -f "$(DEPDIR)/Xquartz-x-hash.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/x-hash.c' object='Xquartz-x-hash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-x-hash.obj `if test -f 'quartz/xpr/x-hash.c'; then $(CYGPATH_W) 'quartz/xpr/x-hash.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/x-hash.c'; fi`

Xquartz-x-hook.o: quartz/xpr/x-hook.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-x-hook.o -MD -MP -MF "$(DEPDIR)/Xquartz-x-hook.Tpo" -c -o Xquartz-x-hook.o `test -f 'quartz/xpr/x-hook.c' || echo '$(srcdir)/'`quartz/xpr/x-hook.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-x-hook.Tpo" "$(DEPDIR)/Xquartz-x-hook.Po"; else rm -f "$(DEPDIR)/Xquartz-x-hook.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/x-hook.c' object='Xquartz-x-hook.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-x-hook.o `test -f 'quartz/xpr/x-hook.c' || echo '$(srcdir)/'`quartz/xpr/x-hook.c

Xquartz-x-hook.obj: quartz/xpr/x-hook.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-x-hook.obj -MD -MP -MF "$(DEPDIR)/Xquartz-x-hook.Tpo" -c -o Xquartz-x-hook.obj `if test -f 'quartz/xpr/x-hook.c'; then $(CYGPATH_W) 'quartz/xpr/x-hook.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/x-hook.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-x-hook.Tpo" "$(DEPDIR)/Xquartz-x-hook.Po"; else rm -f "$(DEPDIR)/Xquartz-x-hook.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/x-hook.c' object='Xquartz-x-hook.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-x-hook.obj `if test -f 'quartz/xpr/x-hook.c'; then $(CYGPATH_W) 'quartz/xpr/x-hook.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/x-hook.c'; fi`

Xquartz-x-list.o: quartz/xpr/x-list.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-x-list.o -MD -MP -MF "$(DEPDIR)/Xquartz-x-list.Tpo" -c -o Xquartz-x-list.o `test -f 'quartz/xpr/x-list.c' || echo '$(srcdir)/'`quartz/xpr/x-list.c; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-x-list.Tpo" "$(DEPDIR)/Xquartz-x-list.Po"; else rm -f "$(DEPDIR)/Xquartz-x-list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/x-list.c' object='Xquartz-x-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-x-list.o `test -f 'quartz/xpr/x-list.c' || echo '$(srcdir)/'`quartz/xpr/x-list.c

Xquartz-x-list.obj: quartz/xpr/x-list.c
@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -MT Xquartz-x-list.obj -MD -MP -MF "$(DEPDIR)/Xquartz-x-list.Tpo" -c -o Xquartz-x-list.obj `if test -f 'quartz/xpr/x-list.c'; then $(CYGPATH_W) 'quartz/xpr/x-list.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/x-list.c'; fi`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/Xquartz-x-list.Tpo" "$(DEPDIR)/Xquartz-x-list.Po"; else rm -f "$(DEPDIR)/Xquartz-x-list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='quartz/xpr/x-list.c' object='Xquartz-x-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(Xquartz_CFLAGS) $(CFLAGS) -c -o Xquartz-x-list.obj `if test -f 'quartz/xpr/x-list.c'; then $(CYGPATH_W) 'quartz/xpr/x-list.c'; else $(CYGPATH_W) '$(srcdir)/quartz/xpr/x-list.c'; fi`

.m.o:
@am__fastdepOBJC_TRUE@	if $(OBJCCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(OBJCCOMPILE) -c -o $@ $<

.m.obj:
@am__fastdepOBJC_TRUE@	if $(OBJCCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(OBJCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.m.lo:
@am__fastdepOBJC_TRUE@	if $(LTOBJCCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(LTOBJCCOMPILE) -c -o $@ $<

crAppleWM.lo: quartz/cr/crAppleWM.m
@am__fastdepOBJC_TRUE@	if $(LIBTOOL) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT crAppleWM.lo -MD -MP -MF "$(DEPDIR)/crAppleWM.Tpo" -c -o crAppleWM.lo `test -f 'quartz/cr/crAppleWM.m' || echo '$(srcdir)/'`quartz/cr/crAppleWM.m; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/crAppleWM.Tpo" "$(DEPDIR)/crAppleWM.Plo"; else rm -f "$(DEPDIR)/crAppleWM.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='quartz/cr/crAppleWM.m' object='crAppleWM.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(LIBTOOL) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o crAppleWM.lo `test -f 'quartz/cr/crAppleWM.m' || echo '$(srcdir)/'`quartz/cr/crAppleWM.m

crFrame.lo: quartz/cr/crFrame.m
@am__fastdepOBJC_TRUE@	if $(LIBTOOL) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT crFrame.lo -MD -MP -MF "$(DEPDIR)/crFrame.Tpo" -c -o crFrame.lo `test -f 'quartz/cr/crFrame.m' || echo '$(srcdir)/'`quartz/cr/crFrame.m; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/crFrame.Tpo" "$(DEPDIR)/crFrame.Plo"; else rm -f "$(DEPDIR)/crFrame.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='quartz/cr/crFrame.m' object='crFrame.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(LIBTOOL) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o crFrame.lo `test -f 'quartz/cr/crFrame.m' || echo '$(srcdir)/'`quartz/cr/crFrame.m

crScreen.lo: quartz/cr/crScreen.m
@am__fastdepOBJC_TRUE@	if $(LIBTOOL) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT crScreen.lo -MD -MP -MF "$(DEPDIR)/crScreen.Tpo" -c -o crScreen.lo `test -f 'quartz/cr/crScreen.m' || echo '$(srcdir)/'`quartz/cr/crScreen.m; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/crScreen.Tpo" "$(DEPDIR)/crScreen.Plo"; else rm -f "$(DEPDIR)/crScreen.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='quartz/cr/crScreen.m' object='crScreen.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(LIBTOOL) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o crScreen.lo `test -f 'quartz/cr/crScreen.m' || echo '$(srcdir)/'`quartz/cr/crScreen.m

XView.lo: quartz/cr/XView.m
@am__fastdepOBJC_TRUE@	if $(LIBTOOL) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT XView.lo -MD -MP -MF "$(DEPDIR)/XView.Tpo" -c -o XView.lo `test -f 'quartz/cr/XView.m' || echo '$(srcdir)/'`quartz/cr/XView.m; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/XView.Tpo" "$(DEPDIR)/XView.Plo"; else rm -f "$(DEPDIR)/XView.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='quartz/cr/XView.m' object='XView.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(LIBTOOL) --mode=compile $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o XView.lo `test -f 'quartz/cr/XView.m' || echo '$(srcdir)/'`quartz/cr/XView.m

X11Application.o: apple/X11Application.m
@am__fastdepOBJC_TRUE@	if $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT X11Application.o -MD -MP -MF "$(DEPDIR)/X11Application.Tpo" -c -o X11Application.o `test -f 'apple/X11Application.m' || echo '$(srcdir)/'`apple/X11Application.m; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/X11Application.Tpo" "$(DEPDIR)/X11Application.Po"; else rm -f "$(DEPDIR)/X11Application.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='apple/X11Application.m' object='X11Application.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o X11Application.o `test -f 'apple/X11Application.m' || echo '$(srcdir)/'`apple/X11Application.m

X11Application.obj: apple/X11Application.m
@am__fastdepOBJC_TRUE@	if $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT X11Application.obj -MD -MP -MF "$(DEPDIR)/X11Application.Tpo" -c -o X11Application.obj `if test -f 'apple/X11Application.m'; then $(CYGPATH_W) 'apple/X11Application.m'; else $(CYGPATH_W) '$(srcdir)/apple/X11Application.m'; fi`; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/X11Application.Tpo" "$(DEPDIR)/X11Application.Po"; else rm -f "$(DEPDIR)/X11Application.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='apple/X11Application.m' object='X11Application.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o X11Application.obj `if test -f 'apple/X11Application.m'; then $(CYGPATH_W) 'apple/X11Application.m'; else $(CYGPATH_W) '$(srcdir)/apple/X11Application.m'; fi`

X11Controller.o: apple/X11Controller.m
@am__fastdepOBJC_TRUE@	if $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT X11Controller.o -MD -MP -MF "$(DEPDIR)/X11Controller.Tpo" -c -o X11Controller.o `test -f 'apple/X11Controller.m' || echo '$(srcdir)/'`apple/X11Controller.m; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/X11Controller.Tpo" "$(DEPDIR)/X11Controller.Po"; else rm -f "$(DEPDIR)/X11Controller.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='apple/X11Controller.m' object='X11Controller.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o X11Controller.o `test -f 'apple/X11Controller.m' || echo '$(srcdir)/'`apple/X11Controller.m

X11Controller.obj: apple/X11Controller.m
@am__fastdepOBJC_TRUE@	if $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT X11Controller.obj -MD -MP -MF "$(DEPDIR)/X11Controller.Tpo" -c -o X11Controller.obj `if test -f 'apple/X11Controller.m'; then $(CYGPATH_W) 'apple/X11Controller.m'; else $(CYGPATH_W) '$(srcdir)/apple/X11Controller.m'; fi`; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/X11Controller.Tpo" "$(DEPDIR)/X11Controller.Po"; else rm -f "$(DEPDIR)/X11Controller.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='apple/X11Controller.m' object='X11Controller.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o X11Controller.obj `if test -f 'apple/X11Controller.m'; then $(CYGPATH_W) 'apple/X11Controller.m'; else $(CYGPATH_W) '$(srcdir)/apple/X11Controller.m'; fi`

Preferences.o: quartz/Preferences.m
@am__fastdepOBJC_TRUE@	if $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT Preferences.o -MD -MP -MF "$(DEPDIR)/Preferences.Tpo" -c -o Preferences.o `test -f 'quartz/Preferences.m' || echo '$(srcdir)/'`quartz/Preferences.m; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/Preferences.Tpo" "$(DEPDIR)/Preferences.Po"; else rm -f "$(DEPDIR)/Preferences.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='quartz/Preferences.m' object='Preferences.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o Preferences.o `test -f 'quartz/Preferences.m' || echo '$(srcdir)/'`quartz/Preferences.m

Preferences.obj: quartz/Preferences.m
@am__fastdepOBJC_TRUE@	if $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT Preferences.obj -MD -MP -MF "$(DEPDIR)/Preferences.Tpo" -c -o Preferences.obj `if test -f 'quartz/Preferences.m'; then $(CYGPATH_W) 'quartz/Preferences.m'; else $(CYGPATH_W) '$(srcdir)/quartz/Preferences.m'; fi`; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/Preferences.Tpo" "$(DEPDIR)/Preferences.Po"; else rm -f "$(DEPDIR)/Preferences.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='quartz/Preferences.m' object='Preferences.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o Preferences.obj `if test -f 'quartz/Preferences.m'; then $(CYGPATH_W) 'quartz/Preferences.m'; else $(CYGPATH_W) '$(srcdir)/quartz/Preferences.m'; fi`

quartzCocoa.o: quartz/quartzCocoa.m
@am__fastdepOBJC_TRUE@	if $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT quartzCocoa.o -MD -MP -MF "$(DEPDIR)/quartzCocoa.Tpo" -c -o quartzCocoa.o `test -f 'quartz/quartzCocoa.m' || echo '$(srcdir)/'`quartz/quartzCocoa.m; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/quartzCocoa.Tpo" "$(DEPDIR)/quartzCocoa.Po"; else rm -f "$(DEPDIR)/quartzCocoa.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='quartz/quartzCocoa.m' object='quartzCocoa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o quartzCocoa.o `test -f 'quartz/quartzCocoa.m' || echo '$(srcdir)/'`quartz/quartzCocoa.m

quartzCocoa.obj: quartz/quartzCocoa.m
@am__fastdepOBJC_TRUE@	if $(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -MT quartzCocoa.obj -MD -MP -MF "$(DEPDIR)/quartzCocoa.Tpo" -c -o quartzCocoa.obj `if test -f 'quartz/quartzCocoa.m'; then $(CYGPATH_W) 'quartz/quartzCocoa.m'; else $(CYGPATH_W) '$(srcdir)/quartz/quartzCocoa.m'; fi`; \
@am__fastdepOBJC_TRUE@	then mv -f "$(DEPDIR)/quartzCocoa.Tpo" "$(DEPDIR)/quartzCocoa.Po"; else rm -f "$(DEPDIR)/quartzCocoa.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	source='quartz/quartzCocoa.m' object='quartzCocoa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJC_FALSE@	DEPDIR=$(DEPDIR) $(OBJCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJC_FALSE@	$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCFLAGS) $(OBJCFLAGS) -c -o quartzCocoa.obj `if test -f 'quartz/quartzCocoa.m'; then $(CYGPATH_W) 'quartz/quartzCocoa.m'; else $(CYGPATH_W) '$(srcdir)/quartz/quartzCocoa.m'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-man1: $(man1_MANS) $(man_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man1dir)" || $(mkdir_p) "$(DESTDIR)$(man1dir)"
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  if test -f $(srcdir)/$$i; then file=$(srcdir)/$$i; \
	  else file=$$i; fi; \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	  $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst"; \
	done
uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(man1_MANS) $(dist_man1_MANS) $(nodist_man1_MANS)'; \
	l2='$(man_MANS) $(dist_man_MANS) $(nodist_man_MANS)'; \
	for i in $$l2; do \
	  case "$$i" in \
	    *.1*) list="$$list $$i" ;; \
	  esac; \
	done; \
	for i in $$list; do \
	  ext=`echo $$i | sed -e 's/^.*\\.//'`; \
	  case "$$ext" in \
	    1*) ;; \
	    *) ext='1' ;; \
	  esac; \
	  inst=`echo $$i | sed -e 's/\\.[0-9a-z]*$$//'`; \
	  inst=`echo $$inst | sed -e 's/^.*\///'`; \
	  inst=`echo $$inst | sed '$(transform)'`.$$ext; \
	  echo " rm -f '$(DESTDIR)$(man1dir)/$$inst'"; \
	  rm -f "$(DESTDIR)$(man1dir)/$$inst"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(PROGRAMS) $(SCRIPTS) \
		$(MANS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(crplugindir)" "$(DESTDIR)$(fullscreenplugindir)" "$(DESTDIR)$(glxAGLplugindir)" "$(DESTDIR)$(glxCGLplugindir)" "$(DESTDIR)$(glxMesaplugindir)" "$(DESTDIR)$(xprplugindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(macosdir)" "$(DESTDIR)$(macosdir)" "$(DESTDIR)$(man1dir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-crpluginLTLIBRARIES \
	clean-fullscreenpluginLTLIBRARIES clean-generic \
	clean-glxAGLpluginLTLIBRARIES clean-glxCGLpluginLTLIBRARIES \
	clean-glxMesapluginLTLIBRARIES clean-libtool \
	clean-macosPROGRAMS clean-noinstLIBRARIES \
	clean-xprpluginLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-crpluginLTLIBRARIES \
	install-fullscreenpluginLTLIBRARIES \
	install-glxAGLpluginLTLIBRARIES \
	install-glxCGLpluginLTLIBRARIES \
	install-glxMesapluginLTLIBRARIES install-macosPROGRAMS \
	install-macosSCRIPTS install-man install-xprpluginLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man: install-man1

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-crpluginLTLIBRARIES \
	uninstall-fullscreenpluginLTLIBRARIES \
	uninstall-glxAGLpluginLTLIBRARIES \
	uninstall-glxCGLpluginLTLIBRARIES \
	uninstall-glxMesapluginLTLIBRARIES uninstall-info-am \
	uninstall-macosPROGRAMS uninstall-macosSCRIPTS uninstall-man \
	uninstall-xprpluginLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook

uninstall-info: uninstall-info-recursive

uninstall-man: uninstall-man1

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-crpluginLTLIBRARIES \
	clean-fullscreenpluginLTLIBRARIES clean-generic \
	clean-glxAGLpluginLTLIBRARIES clean-glxCGLpluginLTLIBRARIES \
	clean-glxMesapluginLTLIBRARIES clean-libtool \
	clean-macosPROGRAMS clean-noinstLIBRARIES clean-recursive \
	clean-xprpluginLTLIBRARIES ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-crpluginLTLIBRARIES install-data install-data-am \
	install-data-hook install-exec install-exec-am \
	install-fullscreenpluginLTLIBRARIES \
	install-glxAGLpluginLTLIBRARIES \
	install-glxCGLpluginLTLIBRARIES \
	install-glxMesapluginLTLIBRARIES install-info install-info-am \
	install-macosPROGRAMS install-macosSCRIPTS install-man \
	install-man1 install-strip install-xprpluginLTLIBRARIES \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-crpluginLTLIBRARIES \
	uninstall-fullscreenpluginLTLIBRARIES \
	uninstall-glxAGLpluginLTLIBRARIES \
	uninstall-glxCGLpluginLTLIBRARIES \
	uninstall-glxMesapluginLTLIBRARIES uninstall-hook \
	uninstall-info-am uninstall-macosPROGRAMS \
	uninstall-macosSCRIPTS uninstall-man uninstall-man1 \
	uninstall-xprpluginLTLIBRARIES


@XQUARTZ_TRUE@x11app:
@XQUARTZ_TRUE@	cd apple && xcodebuild CFLAGS="$(XSERVERCFLAGS_CFLAGS)" LDFLAGS="$(XSERVERCFLAGS_LIBS)"

uninstall-hook:
	rm -rf $(DESTDIR)$(macosdir)/XDarwin

install-data-hook: $(HOOK_TARGETS)

xquartz-install-hook:
	mv $(DESTDIR)$(macosdir)/XDarwinApp $(DESTDIR)$(macosdir)/XDarwin
	cd apple && xcodebuild install
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
