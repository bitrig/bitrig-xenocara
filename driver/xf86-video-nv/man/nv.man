.\" shorthand for double quote that works everywhere.
.ds q \N'34'
.TH NV __drivermansuffix__ __vendorversion__
.SH NAME
nv \- NVIDIA video driver
.SH SYNOPSIS
.nf
.B "Section \*qDevice\*q"
.BI "  Identifier \*q"  devname \*q
.B  "  Driver \*qnv\*q"
\ \ ...
.B EndSection
.fi
.SH DESCRIPTION
.B nv 
is an __xservername__ driver for NVIDIA video cards.  The driver supports 2D 
acceleration and provides support for the following framebuffer depths:
8, 15, 16 (except Riva128) and 24.  All
visual types are supported for depth 8, TrueColor and DirectColor
visuals are supported for the other depths with the exception of
the Riva128 which only supports TrueColor in the higher depths. 

.SH SUPPORTED HARDWARE
The
.B nv
driver supports PCI, PCI-Express and AGP video cards based on the following NVIDIA chips:
.TP 22
.B RIVA 128
NV3
.TP 22
.B RIVA TNT
NV4
.TP 22
.B RIVA TNT2
NV5
.TP 22
.B GeForce 256, Quadro 
NV10
.TP 22
.B GeForce2, Quadro2
NV11 & NV15  
.TP 22
.B GeForce3, Quadro DCC
NV20
.TP 22
.B nForce, nForce2
NV1A, NV1F
.TP 22
.B GeForce4, Quadro4
NV17, NV18, NV25, NV28
.TP 22
.B GeForce FX, Quadro FX
NV30, NV31, NV34, NV35, NV36, NV37, NV38 
.TP 22
.B GeForce 6XXX
NV40, NV41, NV43, NV44, NV45, C51
.TP 22
.B GeForce 7XXX
G70, G71, G72, G73, MCP6x
.TP 22
.B GeForce 8XXX, GeForce 9XXX, nForce 7, GeForce G, ION
G8x, G9x, GT21x, MCP7x
.TP 22
.B GeForce GTX
GT200
.
.SH CONFIGURATION DETAILS
Please refer to __xconfigfile__(__filemansuffix__) for general configuration
details.  This section only covers configuration details specific to this
driver.
.PP
The driver auto-detects the chipset type and the amount of video memory
present for all chips.
.PP
The following driver
.B Options
are supported for pre-G80 hardware:
.TP
.BI "Option \*qHWCursor\*q \*q" boolean \*q
Enable or disable the HW cursor.  Default: on.
.TP
.BI "Option \*qNoAccel\*q \*q" boolean \*q
Disable or enable acceleration.  Default: acceleration is enabled.
.TP
.BI "Option \*qUseFBDev\*q \*q" boolean \*q
Enable or disable use of an OS-specific fb interface (and is not supported
on all OSs).  See fbdevhw(__drivermansuffix__) for further information.
Default: off.
.TP
.BI "Option \*qCrtcNumber\*q \*q" integer \*q
Many graphics cards with NVIDIA chips have two video outputs.  
The driver attempts to autodetect
which one the monitor is connected to.  In the case that autodetection picks
the wrong one, this option may be used to force usage of a particular output. 
The options are "0" or "1".
Default: autodetected.
.TP
.BI "Option \*qDualhead\*q \*q" boolean \*q
Enables simple VBE-based dual head mode.
This sets the same resolution on both outputs and lays them out side-by-side.
The screens will be panned together as one big metamode if the virtual desktop is larger than both screens combined.
.TP
.BI "Option \*qFlatPanel\*q \*q" boolean \*q
The driver usually can autodetect the presence of a digital flat panel.  In
the case that this fails, this option can be used to force the driver to 
treat the attached device as a digital flat panel.  With this 
driver, a digital flat panel will work only if it was POSTed by the BIOS, 
that is, the computer
must have booted to the panel.  If you have a dual head card
you may also need to set the option CrtcNumber described above.
Default: autodetected.
.TP
.BI "Option \*qFPDither\*q \*q" boolean \*q
Many digital flat panels (particularly ones on laptops) have only 6 bits 
per component color resolution.
This option tells the driver to dither from 8 bits per component to 6 before
the flat panel truncates it. 
Default: off.
.TP
.BI "Option \*qFPScale\*q \*q" boolean \*q 
Supported only on GeForce4 and newer chips, this option
tells to the driver to scale lower resolutions up to the flat panel's native
resolution.  Default: on.
.TP 
.BI "Option \*qRotate\*q \*qCW\*q"
.TP
.BI "Option \*qRotate\*q \*qCCW\*q"
Rotate the display clockwise or counterclockwise.  This mode is unaccelerated.
Default: no rotation.

Note: The Resize and Rotate extension will be disabled if the Rotate "CW" or
Rotate "CCW" options are used.
.TP
.BI "Option \*qRotate\*q \*qRandR\*q"
Enable rotation of the screen using the Resize and Rotate extension.
This mode is unaccelerated.
Default: no rotation support.
.TP
.BI "Option \*qShadowFB\*q \*q" boolean \*q
Enable or disable use of the shadow framebuffer layer.  Default: off.
.
.\" ******************** begin G80 section ********************
.PP
The following driver
.B Options
are available for G80 and higher:
.TP
.BI "Option \*qHWCursor\*q \*q" boolean \*q
Enable or disable the hardware cursor.  Default: on.
.TP
.BI "Option \*qNoAccel\*q \*q" boolean \*q
Disable or enable acceleration.  Default: acceleration is enabled.
.TP
.BI "Option \*qAccelMethod\*q \*q" string \*q
Choose acceleration architecture, either \*qXAA\*q or \*qEXA\*q.
XAA is the old but stable architecture.
EXA is newer and supports resizing the desktop larger than it started out with RandR 1.2.
If you choose to use EXA, you might also consider setting
.B Option \*qMigrationHeuristic\*q \*qgreedy\*q
to improve performance.
Default: XAA.
.TP
.BI "Option \*qFPDither\*q \*q" boolean \*q
Enable or disable flat panel dithering by default.
Dithering can also be enabled or disabled using the RandR 1.2 \*qdither\*q output property.
Default: off.
.TP
.BI "Option \*qAllowDualLinkModes\*q \*q" boolean \*q
Allow validation of dual-link DVI modes.
Not all GPUs are configured at boot time to be able to handle dual-link modes, so they are disabled by default.
.
.\" RandR 1.2
.PP
The following RandR 1.2 properties are available for flat panels on G80 and higher GPUs:
.TP
.B dither
Enable or disable flat panel dithering.
Valid values:
.BR 0 " (off), " 1 " (on)."
.TP
.B scale
Control how the image is scaled to fit the flat panel.
Note that some flat panels perform their own scaling, overriding this option.
.RB \*q off \*q
is not valid for laptop flat panels (LVDS).
Valid values:
.RB \*q off "\*q, \*q" aspect "\*q, \*q" fill "\*q, and \*q" center \*q.
Default:
.RB \*q aspect \*q.
.\" ******************** end G80 section ********************
.
.SH "SEE ALSO"
__xservername__(__appmansuffix__), __xconfigfile__(__filemansuffix__), Xserver(__appmansuffix__), X(__miscmansuffix__), xrandr(__appmansuffix__)
.SH AUTHORS
Authors include: David McKay, Jarno Paananen, Chas Inman, Dave Schmenk, 
Mark Vojkovich, Aaron Plattner
.SH COPYRIGHT
.LP
Copyright (c) 2003-2008,2010 NVIDIA Corporation
.LP
Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:
.LP
The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.
.LP
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
